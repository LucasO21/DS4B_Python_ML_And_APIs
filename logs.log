2023-11-09 19:00:57,786:INFO:PyCaret Supervised Module
2023-11-09 19:00:57,788:INFO:ML Usecase: classification
2023-11-09 19:00:57,788:INFO:version 2.3.10
2023-11-09 19:00:57,788:INFO:Initializing setup()
2023-11-09 19:00:57,789:INFO:setup(target=made_purchase, ml_usecase=classification, available_plots={'parameter': 'Hyperparameters', 'auc': 'AUC', 'confusion_matrix': 'Confusion Matrix', 'threshold': 'Threshold', 'pr': 'Precision Recall', 'error': 'Prediction Error', 'class_report': 'Class Report', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'calibration': 'Calibration Curve', 'vc': 'Validation Curve', 'dimension': 'Dimensions', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'boundary': 'Decision Boundary', 'lift': 'Lift Chart', 'gain': 'Gain Chart', 'tree': 'Decision Tree', 'ks': 'KS Statistic Plot'}, train_size=0.8, test_data=None, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=['country_code'], categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features={'member_rating': ['1', '2', '3', '4', '5']}, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['tag_count', 'tag_count_by_optin_day', 'tag_aws_webinar', 'tag_learning_lab', 'tag_learning_lab_05', 'tag_learning_lab_09', 'tag_learning_lab_11', 'tag_learning_lab_12', 'tag_learning_lab_13', 'tag_learning_lab_14', 'tag_learning_lab_15', 'tag_learning_lab_16', 'tag_learning_lab_17', 'tag_learning_lab_18', 'tag_learning_lab_19', 'tag_learning_lab_20', 'tag_learning_lab_21', 'tag_learning_lab_22', 'tag_learning_lab_23', 'tag_learning_lab_24', 'tag_learning_lab_25', 'tag_learning_lab_26', 'tag_learning_lab_27', 'tag_learning_lab_28', 'tag_learning_lab_29', 'tag_learning_lab_30', 'tag_learning_lab_31', 'tag_learning_lab_32', 'tag_learning_lab_33', 'tag_learning_lab_34', 'tag_learning_lab_35', 'tag_learning_lab_36', 'tag_learning_lab_37', 'tag_learning_lab_38', 'tag_learning_lab_39', 'tag_learning_lab_40', 'tag_learning_lab_41', 'tag_learning_lab_42', 'tag_learning_lab_43', 'tag_learning_lab_44', 'tag_learning_lab_45', 'tag_learning_lab_46', 'tag_learning_lab_47', 'tag_time_series_webinar', 'tag_webinar', 'tag_webinar_01', 'tag_webinar_no_degree', 'tag_webinar_no_degree_02', 'optin_days'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=True, rare_level_threshold=0.005, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=False, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=stratifiedkfold, fold=5, fold_shuffle=False, fold_groups=None, n_jobs=1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=True, experiment_name=email_lead_scoring_0, experiment_custom_tags=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2023-11-09 19:00:57,790:INFO:Checking environment
2023-11-09 19:00:57,791:INFO:python_version: 3.7.1
2023-11-09 19:00:57,791:INFO:python_build: ('default', 'Dec 14 2018 13:28:58')
2023-11-09 19:00:57,791:INFO:machine: x86_64
2023-11-09 19:00:57,791:INFO:platform: Darwin-21.6.0-x86_64-i386-64bit
2023-11-09 19:00:57,792:INFO:Memory: svmem(total=8589934592, available=2186022912, percent=74.6, used=4106989568, free=19251200, active=2167889920, inactive=2164211712, wired=1939099648)
2023-11-09 19:00:57,793:INFO:Physical Core: 2
2023-11-09 19:00:57,793:INFO:Logical Core: 4
2023-11-09 19:00:57,793:INFO:Checking libraries
2023-11-09 19:00:57,794:INFO:pd==1.2.3
2023-11-09 19:00:57,794:INFO:numpy==1.19.5
2023-11-09 19:00:57,794:INFO:sklearn==0.23.2
2023-11-09 19:00:57,795:INFO:lightgbm==3.3.5
2023-11-09 19:01:02,388:INFO:catboost==1.1.1
2023-11-09 19:01:02,391:INFO:xgboost==1.6.2
2023-11-09 19:01:02,391:INFO:mlflow==1.28.0
2023-11-09 19:01:02,391:INFO:Checking Exceptions
2023-11-09 19:01:02,397:INFO:Declaring global variables
2023-11-09 19:01:02,397:INFO:USI: c25b
2023-11-09 19:01:02,397:INFO:pycaret_globals: {'target_param', 'imputation_classifier', 'n_jobs_param', 'fix_imbalance_param', 'fold_groups_param', 'transform_target_param', 'data_before_preprocess', '_all_models_internal', 'logging_param', 'fix_imbalance_method_param', 'html_param', '_ml_usecase', 'stratify_param', '_internal_pipeline', 'X', 'y_test', 'fold_shuffle_param', 'USI', 'transform_target_method_param', '_gpu_n_jobs_param', 'pycaret_globals', '_all_models', 'X_train', 'fold_groups_param_full', 'dashboard_logger', 'fold_generator', 'experiment__', 'X_test', 'iterative_imputation_iters_param', 'prep_pipe', 'imputation_regressor', '_available_plots', 'master_model_container', 'log_plots_param', 'fold_param', 'seed', 'display_container', '_all_metrics', 'gpu_param', 'y', 'exp_name_log', 'create_model_container', 'y_train'}
2023-11-09 19:01:02,397:INFO:Preparing display monitor
2023-11-09 19:01:02,398:INFO:Preparing display monitor
2023-11-09 19:01:02,670:INFO:Importing libraries
2023-11-09 19:01:02,670:INFO:Copying data for preprocessing
2023-11-09 19:01:02,781:INFO:Declaring preprocessing parameters
2023-11-09 19:01:02,810:INFO:Creating preprocessing pipeline
2023-11-09 19:01:02,943:INFO:Preprocessing pipeline created successfully
2023-11-09 19:01:02,944:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2023-11-09 19:01:02,945:INFO:Creating global containers
2023-11-09 19:01:02,951:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2023-11-09 19:14:19,438:INFO:Creating grid variables
2023-11-09 19:14:19,652:INFO:Logging experiment in MLFlow
2023-11-09 19:14:20,541:INFO:SubProcess save_model() called ==================================
2023-11-09 19:14:20,730:INFO:Initializing save_model()
2023-11-09 19:14:20,731:INFO:save_model(model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=False, kwargs={})
2023-11-09 19:14:20,731:INFO:Adding model into prep_pipe
2023-11-09 19:14:20,742:WARNING:Only Model saved as it was a pipeline.
2023-11-09 19:14:20,923:INFO:Transformation Pipeline.pkl saved in current working directory
2023-11-09 19:14:21,058:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-11-09 19:14:21,058:INFO:save_model() successfully completed......................................
2023-11-09 19:14:22,734:INFO:SubProcess save_model() end ==================================
2023-11-09 19:14:22,762:INFO:create_model_container: 0
2023-11-09 19:14:22,762:INFO:master_model_container: 0
2023-11-09 19:14:22,762:INFO:display_container: 1
2023-11-09 19:14:22,773:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-11-09 19:14:22,773:INFO:setup() succesfully completed......................................
2023-11-09 19:15:09,427:INFO:Initializing get_config()
2023-11-09 19:15:09,428:INFO:get_config(variable=data_before_preprocess)
2023-11-09 19:15:09,469:INFO:Global variable: data_before_preprocess returned as        member_rating country_code  tag_count  made_purchase  optin_days  \
0                  2           IN          6              1        -589   
1                  4        other          0              1        -773   
2                  2        other          0              1        -773   
3                  2           CO          3              1        -286   
4                  2        other          0              0        -261   
...              ...          ...        ...            ...         ...   
19914              2        other          0              0        -774   
19915              1           BR          0              0        -660   
19916              2           IN          0              0        -479   
19917              2        other          2              0        -434   
19918              2           AE          0              0        -195   

       tag_count_by_optin_day  tag_aws_webinar  tag_learning_lab  \
0                    0.010169              0.0               1.0   
1                    0.000000              0.0               0.0   
2                    0.000000              0.0               0.0   
3                    0.010453              0.0               1.0   
4                    0.000000              0.0               0.0   
...                       ...              ...               ...   
19914                0.000000              0.0               0.0   
19915                0.000000              0.0               0.0   
19916                0.000000              0.0               0.0   
19917                0.004598              0.0               1.0   
19918                0.000000              0.0               0.0   

       tag_learning_lab_05  tag_learning_lab_09  ...  tag_learning_lab_43  \
0                      0.0                  0.0  ...                  0.0   
1                      0.0                  0.0  ...                  0.0   
2                      0.0                  0.0  ...                  0.0   
3                      0.0                  0.0  ...                  0.0   
4                      0.0                  0.0  ...                  0.0   
...                    ...                  ...  ...                  ...   
19914                  0.0                  0.0  ...                  0.0   
19915                  0.0                  0.0  ...                  0.0   
19916                  0.0                  0.0  ...                  0.0   
19917                  0.0                  0.0  ...                  0.0   
19918                  0.0                  0.0  ...                  0.0   

       tag_learning_lab_44  tag_learning_lab_45  tag_learning_lab_46  \
0                      0.0                  0.0                  0.0   
1                      0.0                  0.0                  0.0   
2                      0.0                  0.0                  0.0   
3                      0.0                  0.0                  0.0   
4                      0.0                  0.0                  0.0   
...                    ...                  ...                  ...   
19914                  0.0                  0.0                  0.0   
19915                  0.0                  0.0                  0.0   
19916                  0.0                  0.0                  0.0   
19917                  0.0                  0.0                  0.0   
19918                  0.0                  0.0                  0.0   

       tag_learning_lab_47  tag_time_series_webinar  tag_webinar  \
0                      0.0                      0.0          1.0   
1                      0.0                      0.0          0.0   
2                      0.0                      0.0          0.0   
3                      0.0                      0.0          0.0   
4                      0.0                      0.0          0.0   
...                    ...                      ...          ...   
19914                  0.0                      0.0          0.0   
19915                  0.0                      0.0          0.0   
19916                  0.0                      0.0          0.0   
19917                  0.0                      0.0          0.0   
19918                  0.0                      0.0          0.0   

       tag_webinar_01  tag_webinar_no_degree  tag_webinar_no_degree_02  
0                 0.0                    0.0                       0.0  
1                 0.0                    0.0                       0.0  
2                 0.0                    0.0                       0.0  
3                 0.0                    0.0                       0.0  
4                 0.0                    0.0                       0.0  
...               ...                    ...                       ...  
19914             0.0                    0.0                       0.0  
19915             0.0                    0.0                       0.0  
19916             0.0                    0.0                       0.0  
19917             0.0                    0.0                       0.0  
19918             0.0                    0.0                       0.0  

[19919 rows x 52 columns]
2023-11-09 19:15:09,470:INFO:get_config() succesfully completed......................................
2023-11-09 19:16:19,919:INFO:gpu_param set to False
2023-11-09 19:19:55,440:INFO:Initializing compare_models()
2023-11-09 19:19:55,441:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=AUC, n_select=3, budget_time=3, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2023-11-09 19:19:55,442:INFO:Checking exceptions
2023-11-09 19:19:55,489:INFO:Preparing display monitor
2023-11-09 19:19:55,491:INFO:Preparing display monitor
2023-11-09 19:19:55,674:INFO:Time budget is 3 minutes
2023-11-09 19:19:55,676:INFO:Initializing Logistic Regression
2023-11-09 19:19:55,676:INFO:Total runtime is 2.8085708618164062e-05 minutes
2023-11-09 19:19:55,728:INFO:SubProcess create_model() called ==================================
2023-11-09 19:19:55,732:INFO:Initializing create_model()
2023-11-09 19:19:55,741:INFO:create_model(estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:19:55,756:INFO:Checking exceptions
2023-11-09 19:19:55,757:INFO:Importing libraries
2023-11-09 19:19:55,757:INFO:Copying training dataset
2023-11-09 19:19:55,787:INFO:Defining folds
2023-11-09 19:19:55,788:INFO:Declaring metric variables
2023-11-09 19:19:55,843:INFO:Importing untrained model
2023-11-09 19:19:55,906:INFO:Logistic Regression Imported succesfully
2023-11-09 19:19:56,001:INFO:Starting cross validation
2023-11-09 19:19:56,005:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:20:05,534:INFO:Calculating mean and std
2023-11-09 19:20:05,536:INFO:Creating metrics dataframe
2023-11-09 19:20:05,560:INFO:Uploading results into container
2023-11-09 19:20:05,561:INFO:Uploading model into container now
2023-11-09 19:20:05,561:INFO:create_model_container: 1
2023-11-09 19:20:05,561:INFO:master_model_container: 1
2023-11-09 19:20:05,561:INFO:display_container: 2
2023-11-09 19:20:05,564:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-09 19:20:05,564:INFO:create_model() succesfully completed......................................
2023-11-09 19:20:06,139:INFO:SubProcess create_model() end ==================================
2023-11-09 19:20:06,140:INFO:Creating metrics dataframe
2023-11-09 19:20:06,193:INFO:Initializing K Neighbors Classifier
2023-11-09 19:20:06,193:INFO:Total runtime is 0.17531283299128217 minutes
2023-11-09 19:20:06,248:INFO:SubProcess create_model() called ==================================
2023-11-09 19:20:06,249:INFO:Initializing create_model()
2023-11-09 19:20:06,250:INFO:create_model(estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:20:06,250:INFO:Checking exceptions
2023-11-09 19:20:06,250:INFO:Importing libraries
2023-11-09 19:20:06,250:INFO:Copying training dataset
2023-11-09 19:20:06,259:INFO:Defining folds
2023-11-09 19:20:06,259:INFO:Declaring metric variables
2023-11-09 19:20:06,308:INFO:Importing untrained model
2023-11-09 19:20:06,369:INFO:K Neighbors Classifier Imported succesfully
2023-11-09 19:20:06,436:INFO:Starting cross validation
2023-11-09 19:20:06,436:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:20:10,176:INFO:Calculating mean and std
2023-11-09 19:20:10,177:INFO:Creating metrics dataframe
2023-11-09 19:20:10,228:INFO:Uploading results into container
2023-11-09 19:20:10,235:INFO:Uploading model into container now
2023-11-09 19:20:10,236:INFO:create_model_container: 2
2023-11-09 19:20:10,236:INFO:master_model_container: 2
2023-11-09 19:20:10,238:INFO:display_container: 2
2023-11-09 19:20:10,239:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-09 19:20:10,240:INFO:create_model() succesfully completed......................................
2023-11-09 19:20:10,505:INFO:SubProcess create_model() end ==================================
2023-11-09 19:20:10,506:INFO:Creating metrics dataframe
2023-11-09 19:20:10,592:INFO:Initializing Naive Bayes
2023-11-09 19:20:10,592:INFO:Total runtime is 0.24863404830296837 minutes
2023-11-09 19:20:10,702:INFO:SubProcess create_model() called ==================================
2023-11-09 19:20:10,709:INFO:Initializing create_model()
2023-11-09 19:20:10,709:INFO:create_model(estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:20:10,709:INFO:Checking exceptions
2023-11-09 19:20:10,709:INFO:Importing libraries
2023-11-09 19:20:10,709:INFO:Copying training dataset
2023-11-09 19:20:10,711:INFO:Defining folds
2023-11-09 19:20:10,711:INFO:Declaring metric variables
2023-11-09 19:20:10,760:INFO:Importing untrained model
2023-11-09 19:20:10,796:INFO:Naive Bayes Imported succesfully
2023-11-09 19:20:10,881:INFO:Starting cross validation
2023-11-09 19:20:10,885:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:20:11,540:INFO:Calculating mean and std
2023-11-09 19:20:11,541:INFO:Creating metrics dataframe
2023-11-09 19:20:11,558:INFO:Uploading results into container
2023-11-09 19:20:11,559:INFO:Uploading model into container now
2023-11-09 19:20:11,559:INFO:create_model_container: 3
2023-11-09 19:20:11,559:INFO:master_model_container: 3
2023-11-09 19:20:11,579:INFO:display_container: 2
2023-11-09 19:20:11,580:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-09 19:20:11,580:INFO:create_model() succesfully completed......................................
2023-11-09 19:20:11,743:INFO:SubProcess create_model() end ==================================
2023-11-09 19:20:11,743:INFO:Creating metrics dataframe
2023-11-09 19:20:11,789:INFO:Initializing Decision Tree Classifier
2023-11-09 19:20:11,789:INFO:Total runtime is 0.2685871998469035 minutes
2023-11-09 19:20:11,819:INFO:SubProcess create_model() called ==================================
2023-11-09 19:20:11,820:INFO:Initializing create_model()
2023-11-09 19:20:11,820:INFO:create_model(estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:20:11,821:INFO:Checking exceptions
2023-11-09 19:20:11,821:INFO:Importing libraries
2023-11-09 19:20:11,821:INFO:Copying training dataset
2023-11-09 19:20:11,824:INFO:Defining folds
2023-11-09 19:20:11,825:INFO:Declaring metric variables
2023-11-09 19:20:11,887:INFO:Importing untrained model
2023-11-09 19:20:11,925:INFO:Decision Tree Classifier Imported succesfully
2023-11-09 19:20:12,021:INFO:Starting cross validation
2023-11-09 19:20:12,022:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:20:13,119:INFO:Calculating mean and std
2023-11-09 19:20:13,120:INFO:Creating metrics dataframe
2023-11-09 19:20:13,128:INFO:Uploading results into container
2023-11-09 19:20:13,128:INFO:Uploading model into container now
2023-11-09 19:20:13,128:INFO:create_model_container: 4
2023-11-09 19:20:13,129:INFO:master_model_container: 4
2023-11-09 19:20:13,129:INFO:display_container: 2
2023-11-09 19:20:13,130:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, presort='deprecated',
                       random_state=123, splitter='best')
2023-11-09 19:20:13,130:INFO:create_model() succesfully completed......................................
2023-11-09 19:20:13,286:INFO:SubProcess create_model() end ==================================
2023-11-09 19:20:13,286:INFO:Creating metrics dataframe
2023-11-09 19:20:13,343:INFO:Initializing SVM - Linear Kernel
2023-11-09 19:20:13,343:INFO:Total runtime is 0.29447946945826214 minutes
2023-11-09 19:20:13,444:INFO:SubProcess create_model() called ==================================
2023-11-09 19:20:13,445:INFO:Initializing create_model()
2023-11-09 19:20:13,445:INFO:create_model(estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:20:13,445:INFO:Checking exceptions
2023-11-09 19:20:13,445:INFO:Importing libraries
2023-11-09 19:20:13,445:INFO:Copying training dataset
2023-11-09 19:20:13,471:INFO:Defining folds
2023-11-09 19:20:13,472:INFO:Declaring metric variables
2023-11-09 19:20:13,511:INFO:Importing untrained model
2023-11-09 19:20:13,545:INFO:SVM - Linear Kernel Imported succesfully
2023-11-09 19:20:13,641:INFO:Starting cross validation
2023-11-09 19:20:13,643:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:20:16,958:INFO:Calculating mean and std
2023-11-09 19:20:16,959:INFO:Creating metrics dataframe
2023-11-09 19:20:16,971:INFO:Uploading results into container
2023-11-09 19:20:16,971:INFO:Uploading model into container now
2023-11-09 19:20:16,972:INFO:create_model_container: 5
2023-11-09 19:20:16,972:INFO:master_model_container: 5
2023-11-09 19:20:16,972:INFO:display_container: 2
2023-11-09 19:20:16,973:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-09 19:20:16,973:INFO:create_model() succesfully completed......................................
2023-11-09 19:20:17,117:INFO:SubProcess create_model() end ==================================
2023-11-09 19:20:17,118:INFO:Creating metrics dataframe
2023-11-09 19:20:17,174:INFO:Initializing Ridge Classifier
2023-11-09 19:20:17,174:INFO:Total runtime is 0.35833713610967 minutes
2023-11-09 19:20:17,256:INFO:SubProcess create_model() called ==================================
2023-11-09 19:20:17,257:INFO:Initializing create_model()
2023-11-09 19:20:17,257:INFO:create_model(estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:20:17,257:INFO:Checking exceptions
2023-11-09 19:20:17,261:INFO:Importing libraries
2023-11-09 19:20:17,262:INFO:Copying training dataset
2023-11-09 19:20:17,274:INFO:Defining folds
2023-11-09 19:20:17,274:INFO:Declaring metric variables
2023-11-09 19:20:17,319:INFO:Importing untrained model
2023-11-09 19:20:17,352:INFO:Ridge Classifier Imported succesfully
2023-11-09 19:20:17,626:INFO:Starting cross validation
2023-11-09 19:20:17,632:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:20:18,651:INFO:Calculating mean and std
2023-11-09 19:20:18,659:INFO:Creating metrics dataframe
2023-11-09 19:20:18,858:INFO:Uploading results into container
2023-11-09 19:20:18,859:INFO:Uploading model into container now
2023-11-09 19:20:18,860:INFO:create_model_container: 6
2023-11-09 19:20:18,860:INFO:master_model_container: 6
2023-11-09 19:20:18,860:INFO:display_container: 2
2023-11-09 19:20:18,861:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize=False, random_state=123, solver='auto',
                tol=0.001)
2023-11-09 19:20:18,861:INFO:create_model() succesfully completed......................................
2023-11-09 19:20:19,107:INFO:SubProcess create_model() end ==================================
2023-11-09 19:20:19,107:INFO:Creating metrics dataframe
2023-11-09 19:20:19,153:INFO:Initializing Random Forest Classifier
2023-11-09 19:20:19,153:INFO:Total runtime is 0.39132013320922854 minutes
2023-11-09 19:20:19,178:INFO:SubProcess create_model() called ==================================
2023-11-09 19:20:19,179:INFO:Initializing create_model()
2023-11-09 19:20:19,180:INFO:create_model(estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:20:19,184:INFO:Checking exceptions
2023-11-09 19:20:19,185:INFO:Importing libraries
2023-11-09 19:20:19,185:INFO:Copying training dataset
2023-11-09 19:20:19,189:INFO:Defining folds
2023-11-09 19:20:19,189:INFO:Declaring metric variables
2023-11-09 19:20:19,255:INFO:Importing untrained model
2023-11-09 19:20:19,295:INFO:Random Forest Classifier Imported succesfully
2023-11-09 19:20:19,375:INFO:Starting cross validation
2023-11-09 19:20:19,385:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:20:35,839:INFO:Calculating mean and std
2023-11-09 19:20:35,841:INFO:Creating metrics dataframe
2023-11-09 19:20:35,856:INFO:Uploading results into container
2023-11-09 19:20:35,857:INFO:Uploading model into container now
2023-11-09 19:20:35,857:INFO:create_model_container: 7
2023-11-09 19:20:35,857:INFO:master_model_container: 7
2023-11-09 19:20:35,858:INFO:display_container: 2
2023-11-09 19:20:35,860:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='auto',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=2,
                       min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2023-11-09 19:20:35,860:INFO:create_model() succesfully completed......................................
2023-11-09 19:20:36,001:INFO:SubProcess create_model() end ==================================
2023-11-09 19:20:36,001:INFO:Creating metrics dataframe
2023-11-09 19:20:36,040:INFO:Initializing Quadratic Discriminant Analysis
2023-11-09 19:20:36,041:INFO:Total runtime is 0.6727781534194947 minutes
2023-11-09 19:20:36,092:INFO:SubProcess create_model() called ==================================
2023-11-09 19:20:36,096:INFO:Initializing create_model()
2023-11-09 19:20:36,102:INFO:create_model(estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:20:36,109:INFO:Checking exceptions
2023-11-09 19:20:36,110:INFO:Importing libraries
2023-11-09 19:20:36,111:INFO:Copying training dataset
2023-11-09 19:20:36,119:INFO:Defining folds
2023-11-09 19:20:36,119:INFO:Declaring metric variables
2023-11-09 19:20:36,158:INFO:Importing untrained model
2023-11-09 19:20:36,219:INFO:Quadratic Discriminant Analysis Imported succesfully
2023-11-09 19:20:36,290:INFO:Starting cross validation
2023-11-09 19:20:36,295:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:20:37,701:INFO:Calculating mean and std
2023-11-09 19:20:37,705:INFO:Creating metrics dataframe
2023-11-09 19:20:37,715:INFO:Uploading results into container
2023-11-09 19:20:37,715:INFO:Uploading model into container now
2023-11-09 19:20:37,716:INFO:create_model_container: 8
2023-11-09 19:20:37,716:INFO:master_model_container: 8
2023-11-09 19:20:37,717:INFO:display_container: 2
2023-11-09 19:20:37,718:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-09 19:20:37,718:INFO:create_model() succesfully completed......................................
2023-11-09 19:20:37,855:INFO:SubProcess create_model() end ==================================
2023-11-09 19:20:37,855:INFO:Creating metrics dataframe
2023-11-09 19:20:37,894:INFO:Initializing Ada Boost Classifier
2023-11-09 19:20:37,895:INFO:Total runtime is 0.7036728342374166 minutes
2023-11-09 19:20:37,946:INFO:SubProcess create_model() called ==================================
2023-11-09 19:20:37,961:INFO:Initializing create_model()
2023-11-09 19:20:37,964:INFO:create_model(estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:20:37,974:INFO:Checking exceptions
2023-11-09 19:20:37,974:INFO:Importing libraries
2023-11-09 19:20:37,975:INFO:Copying training dataset
2023-11-09 19:20:37,980:INFO:Defining folds
2023-11-09 19:20:37,981:INFO:Declaring metric variables
2023-11-09 19:20:38,023:INFO:Importing untrained model
2023-11-09 19:20:38,055:INFO:Ada Boost Classifier Imported succesfully
2023-11-09 19:20:38,160:INFO:Starting cross validation
2023-11-09 19:20:38,173:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:20:44,961:INFO:Calculating mean and std
2023-11-09 19:20:44,962:INFO:Creating metrics dataframe
2023-11-09 19:20:44,975:INFO:Uploading results into container
2023-11-09 19:20:44,975:INFO:Uploading model into container now
2023-11-09 19:20:44,976:INFO:create_model_container: 9
2023-11-09 19:20:44,976:INFO:master_model_container: 9
2023-11-09 19:20:44,976:INFO:display_container: 2
2023-11-09 19:20:44,977:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2023-11-09 19:20:44,977:INFO:create_model() succesfully completed......................................
2023-11-09 19:20:45,121:INFO:SubProcess create_model() end ==================================
2023-11-09 19:20:45,121:INFO:Creating metrics dataframe
2023-11-09 19:20:45,160:INFO:Initializing Gradient Boosting Classifier
2023-11-09 19:20:45,161:INFO:Total runtime is 0.8247751355171203 minutes
2023-11-09 19:20:45,224:INFO:SubProcess create_model() called ==================================
2023-11-09 19:20:45,227:INFO:Initializing create_model()
2023-11-09 19:20:45,227:INFO:create_model(estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:20:45,227:INFO:Checking exceptions
2023-11-09 19:20:45,227:INFO:Importing libraries
2023-11-09 19:20:45,227:INFO:Copying training dataset
2023-11-09 19:20:45,253:INFO:Defining folds
2023-11-09 19:20:45,255:INFO:Declaring metric variables
2023-11-09 19:20:45,294:INFO:Importing untrained model
2023-11-09 19:20:45,334:INFO:Gradient Boosting Classifier Imported succesfully
2023-11-09 19:20:45,421:INFO:Starting cross validation
2023-11-09 19:20:45,425:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:20:58,025:INFO:Calculating mean and std
2023-11-09 19:20:58,027:INFO:Creating metrics dataframe
2023-11-09 19:20:58,045:INFO:Uploading results into container
2023-11-09 19:20:58,045:INFO:Uploading model into container now
2023-11-09 19:20:58,045:INFO:create_model_container: 10
2023-11-09 19:20:58,046:INFO:master_model_container: 10
2023-11-09 19:20:58,046:INFO:display_container: 2
2023-11-09 19:20:58,046:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-09 19:20:58,047:INFO:create_model() succesfully completed......................................
2023-11-09 19:20:58,193:INFO:SubProcess create_model() end ==================================
2023-11-09 19:20:58,193:INFO:Creating metrics dataframe
2023-11-09 19:20:58,247:INFO:Initializing Linear Discriminant Analysis
2023-11-09 19:20:58,248:INFO:Total runtime is 1.0428899685541788 minutes
2023-11-09 19:20:58,290:INFO:SubProcess create_model() called ==================================
2023-11-09 19:20:58,291:INFO:Initializing create_model()
2023-11-09 19:20:58,292:INFO:create_model(estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:20:58,292:INFO:Checking exceptions
2023-11-09 19:20:58,292:INFO:Importing libraries
2023-11-09 19:20:58,292:INFO:Copying training dataset
2023-11-09 19:20:58,296:INFO:Defining folds
2023-11-09 19:20:58,296:INFO:Declaring metric variables
2023-11-09 19:20:58,385:INFO:Importing untrained model
2023-11-09 19:20:58,410:INFO:Linear Discriminant Analysis Imported succesfully
2023-11-09 19:20:58,506:INFO:Starting cross validation
2023-11-09 19:20:58,508:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:21:00,722:INFO:Calculating mean and std
2023-11-09 19:21:00,723:INFO:Creating metrics dataframe
2023-11-09 19:21:00,738:INFO:Uploading results into container
2023-11-09 19:21:00,743:INFO:Uploading model into container now
2023-11-09 19:21:00,745:INFO:create_model_container: 11
2023-11-09 19:21:00,746:INFO:master_model_container: 11
2023-11-09 19:21:00,746:INFO:display_container: 2
2023-11-09 19:21:00,747:INFO:LinearDiscriminantAnalysis(n_components=None, priors=None, shrinkage=None,
                           solver='svd', store_covariance=False, tol=0.0001)
2023-11-09 19:21:00,747:INFO:create_model() succesfully completed......................................
2023-11-09 19:21:00,898:INFO:SubProcess create_model() end ==================================
2023-11-09 19:21:00,899:INFO:Creating metrics dataframe
2023-11-09 19:21:00,944:INFO:Initializing Extra Trees Classifier
2023-11-09 19:21:00,944:INFO:Total runtime is 1.08783860206604 minutes
2023-11-09 19:21:00,981:INFO:SubProcess create_model() called ==================================
2023-11-09 19:21:00,981:INFO:Initializing create_model()
2023-11-09 19:21:00,982:INFO:create_model(estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:21:00,982:INFO:Checking exceptions
2023-11-09 19:21:00,982:INFO:Importing libraries
2023-11-09 19:21:00,983:INFO:Copying training dataset
2023-11-09 19:21:00,992:INFO:Defining folds
2023-11-09 19:21:00,992:INFO:Declaring metric variables
2023-11-09 19:21:01,039:INFO:Importing untrained model
2023-11-09 19:21:01,080:INFO:Extra Trees Classifier Imported succesfully
2023-11-09 19:21:01,161:INFO:Starting cross validation
2023-11-09 19:21:01,162:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:21:16,956:INFO:Calculating mean and std
2023-11-09 19:21:16,958:INFO:Creating metrics dataframe
2023-11-09 19:21:16,964:INFO:Uploading results into container
2023-11-09 19:21:16,965:INFO:Uploading model into container now
2023-11-09 19:21:16,965:INFO:create_model_container: 12
2023-11-09 19:21:16,965:INFO:master_model_container: 12
2023-11-09 19:21:16,965:INFO:display_container: 2
2023-11-09 19:21:16,966:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='auto',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_impurity_split=None,
                     min_samples_leaf=1, min_samples_split=2,
                     min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2023-11-09 19:21:16,966:INFO:create_model() succesfully completed......................................
2023-11-09 19:21:17,118:INFO:SubProcess create_model() end ==================================
2023-11-09 19:21:17,118:INFO:Creating metrics dataframe
2023-11-09 19:21:17,177:INFO:Initializing Extreme Gradient Boosting
2023-11-09 19:21:17,177:INFO:Total runtime is 1.3583771030108134 minutes
2023-11-09 19:21:17,223:INFO:SubProcess create_model() called ==================================
2023-11-09 19:21:17,224:INFO:Initializing create_model()
2023-11-09 19:21:17,247:INFO:create_model(estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:21:17,257:INFO:Checking exceptions
2023-11-09 19:21:17,258:INFO:Importing libraries
2023-11-09 19:21:17,258:INFO:Copying training dataset
2023-11-09 19:21:17,260:INFO:Defining folds
2023-11-09 19:21:17,260:INFO:Declaring metric variables
2023-11-09 19:21:17,293:INFO:Importing untrained model
2023-11-09 19:21:17,333:INFO:Extreme Gradient Boosting Imported succesfully
2023-11-09 19:21:17,412:INFO:Starting cross validation
2023-11-09 19:21:17,424:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:21:53,802:INFO:Calculating mean and std
2023-11-09 19:21:53,804:INFO:Creating metrics dataframe
2023-11-09 19:21:53,814:INFO:Uploading results into container
2023-11-09 19:21:53,814:INFO:Uploading model into container now
2023-11-09 19:21:53,814:INFO:create_model_container: 13
2023-11-09 19:21:53,814:INFO:master_model_container: 13
2023-11-09 19:21:53,815:INFO:display_container: 2
2023-11-09 19:21:53,817:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=1,
              num_parallel_tree=None, objective='binary:logistic',
              predictor=None, random_state=123, reg_alpha=None, ...)
2023-11-09 19:21:53,817:INFO:create_model() succesfully completed......................................
2023-11-09 19:21:53,938:INFO:SubProcess create_model() end ==================================
2023-11-09 19:21:53,938:INFO:Creating metrics dataframe
2023-11-09 19:21:53,979:INFO:Initializing Light Gradient Boosting Machine
2023-11-09 19:21:53,979:INFO:Total runtime is 1.9717469851175944 minutes
2023-11-09 19:21:54,014:INFO:SubProcess create_model() called ==================================
2023-11-09 19:21:54,015:INFO:Initializing create_model()
2023-11-09 19:21:54,015:INFO:create_model(estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:21:54,015:INFO:Checking exceptions
2023-11-09 19:21:54,015:INFO:Importing libraries
2023-11-09 19:21:54,016:INFO:Copying training dataset
2023-11-09 19:21:54,024:INFO:Defining folds
2023-11-09 19:21:54,024:INFO:Declaring metric variables
2023-11-09 19:21:54,073:INFO:Importing untrained model
2023-11-09 19:21:54,096:INFO:Light Gradient Boosting Machine Imported succesfully
2023-11-09 19:21:54,155:INFO:Starting cross validation
2023-11-09 19:21:54,156:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:21:55,867:INFO:Calculating mean and std
2023-11-09 19:21:55,869:INFO:Creating metrics dataframe
2023-11-09 19:21:55,876:INFO:Uploading results into container
2023-11-09 19:21:55,876:INFO:Uploading model into container now
2023-11-09 19:21:55,877:INFO:create_model_container: 14
2023-11-09 19:21:55,877:INFO:master_model_container: 14
2023-11-09 19:21:55,877:INFO:display_container: 2
2023-11-09 19:21:55,877:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-11-09 19:21:55,878:INFO:create_model() succesfully completed......................................
2023-11-09 19:21:55,997:INFO:SubProcess create_model() end ==================================
2023-11-09 19:21:55,997:INFO:Creating metrics dataframe
2023-11-09 19:21:56,037:INFO:Initializing CatBoost Classifier
2023-11-09 19:21:56,038:INFO:Total runtime is 2.0060600519180296 minutes
2023-11-09 19:21:56,281:INFO:SubProcess create_model() called ==================================
2023-11-09 19:21:56,283:INFO:Initializing create_model()
2023-11-09 19:21:56,284:INFO:create_model(estimator=catboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:21:56,284:INFO:Checking exceptions
2023-11-09 19:21:56,284:INFO:Importing libraries
2023-11-09 19:21:56,284:INFO:Copying training dataset
2023-11-09 19:21:56,287:INFO:Defining folds
2023-11-09 19:21:56,287:INFO:Declaring metric variables
2023-11-09 19:21:56,320:INFO:Importing untrained model
2023-11-09 19:21:56,348:INFO:CatBoost Classifier Imported succesfully
2023-11-09 19:21:56,437:INFO:Starting cross validation
2023-11-09 19:21:56,439:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:22:35,904:INFO:Calculating mean and std
2023-11-09 19:22:35,906:INFO:Creating metrics dataframe
2023-11-09 19:22:35,913:INFO:Uploading results into container
2023-11-09 19:22:35,913:INFO:Uploading model into container now
2023-11-09 19:22:35,913:INFO:create_model_container: 15
2023-11-09 19:22:35,913:INFO:master_model_container: 15
2023-11-09 19:22:35,913:INFO:display_container: 2
2023-11-09 19:22:35,913:INFO:<catboost.core.CatBoostClassifier object at 0x7f7b09d7d7b8>
2023-11-09 19:22:35,913:INFO:create_model() succesfully completed......................................
2023-11-09 19:22:36,025:INFO:SubProcess create_model() end ==================================
2023-11-09 19:22:36,026:INFO:Creating metrics dataframe
2023-11-09 19:22:36,071:INFO:Initializing Dummy Classifier
2023-11-09 19:22:36,071:INFO:Total runtime is 2.6732886195182797 minutes
2023-11-09 19:22:36,096:INFO:SubProcess create_model() called ==================================
2023-11-09 19:22:36,096:INFO:Initializing create_model()
2023-11-09 19:22:36,096:INFO:create_model(estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b27122940>, return_train_score=False, kwargs={})
2023-11-09 19:22:36,097:INFO:Checking exceptions
2023-11-09 19:22:36,097:INFO:Importing libraries
2023-11-09 19:22:36,097:INFO:Copying training dataset
2023-11-09 19:22:36,105:INFO:Defining folds
2023-11-09 19:22:36,106:INFO:Declaring metric variables
2023-11-09 19:22:36,162:INFO:Importing untrained model
2023-11-09 19:22:36,197:INFO:Dummy Classifier Imported succesfully
2023-11-09 19:22:36,246:INFO:Starting cross validation
2023-11-09 19:22:36,246:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:22:36,366:INFO:Calculating mean and std
2023-11-09 19:22:36,368:INFO:Creating metrics dataframe
2023-11-09 19:22:36,381:INFO:Uploading results into container
2023-11-09 19:22:36,381:INFO:Uploading model into container now
2023-11-09 19:22:36,382:INFO:create_model_container: 16
2023-11-09 19:22:36,382:INFO:master_model_container: 16
2023-11-09 19:22:36,382:INFO:display_container: 2
2023-11-09 19:22:36,383:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-11-09 19:22:36,383:INFO:create_model() succesfully completed......................................
2023-11-09 19:22:36,501:INFO:SubProcess create_model() end ==================================
2023-11-09 19:22:36,501:INFO:Creating metrics dataframe
2023-11-09 19:22:36,615:INFO:Initializing create_model()
2023-11-09 19:22:36,616:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-11-09 19:22:36,616:INFO:Checking exceptions
2023-11-09 19:22:36,616:INFO:Importing libraries
2023-11-09 19:22:36,616:INFO:Copying training dataset
2023-11-09 19:22:36,628:INFO:Defining folds
2023-11-09 19:22:36,629:INFO:Declaring metric variables
2023-11-09 19:22:36,629:INFO:Importing untrained model
2023-11-09 19:22:36,629:INFO:Declaring custom model
2023-11-09 19:22:36,631:INFO:Gradient Boosting Classifier Imported succesfully
2023-11-09 19:22:36,631:INFO:Cross validation set to False
2023-11-09 19:22:36,631:INFO:Fitting Model
2023-11-09 19:22:38,882:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-09 19:22:38,882:INFO:create_models() succesfully completed......................................
2023-11-09 19:22:38,988:INFO:Creating Dashboard logs
2023-11-09 19:22:39,001:INFO:Model: Gradient Boosting Classifier
2023-11-09 19:22:39,030:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'deviance', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-11-09 19:22:39,067:INFO:Initializing predict_model()
2023-11-09 19:22:39,068:INFO:predict_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-09 19:22:39,068:INFO:Checking exceptions
2023-11-09 19:22:39,068:INFO:Preloading libraries
2023-11-09 19:22:39,816:INFO:Initializing create_model()
2023-11-09 19:22:39,816:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b09d7d7b8>, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-11-09 19:22:39,816:INFO:Checking exceptions
2023-11-09 19:22:39,816:INFO:Importing libraries
2023-11-09 19:22:39,816:INFO:Copying training dataset
2023-11-09 19:22:39,819:INFO:Defining folds
2023-11-09 19:22:39,819:INFO:Declaring metric variables
2023-11-09 19:22:39,819:INFO:Importing untrained model
2023-11-09 19:22:39,819:INFO:Declaring custom model
2023-11-09 19:22:39,820:INFO:CatBoost Classifier Imported succesfully
2023-11-09 19:22:39,821:INFO:Cross validation set to False
2023-11-09 19:22:39,822:INFO:Fitting Model
2023-11-09 19:22:48,376:INFO:<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>
2023-11-09 19:22:48,376:INFO:create_models() succesfully completed......................................
2023-11-09 19:22:48,484:INFO:Creating Dashboard logs
2023-11-09 19:22:48,498:INFO:Model: CatBoost Classifier
2023-11-09 19:22:48,522:INFO:logged params: {'nan_mode': 'Min', 'eval_metric': 'Logloss', 'iterations': 1000, 'sampling_frequency': 'PerTree', 'leaf_estimation_method': 'Newton', 'grow_policy': 'SymmetricTree', 'penalties_coefficient': 1, 'boosting_type': 'Plain', 'model_shrink_mode': 'Constant', 'feature_border_type': 'GreedyLogSum', 'bayesian_matrix_reg': 0.10000000149011612, 'eval_fraction': 0, 'force_unit_auto_pair_weights': False, 'l2_leaf_reg': 3, 'random_strength': 1, 'rsm': 1, 'boost_from_average': False, 'model_size_reg': 0.5, 'pool_metainfo_options': {'tags': {}}, 'subsample': 0.800000011920929, 'use_best_model': False, 'class_names': [0, 1], 'random_seed': 123, 'depth': 6, 'posterior_sampling': False, 'border_count': 254, 'classes_count': 0, 'auto_class_weights': 'None', 'sparse_features_conflict_fraction': 0, 'leaf_estimation_backtracking': 'AnyImprovement', 'best_model_min_trees': 1, 'model_shrink_rate': 0, 'min_data_in_leaf': 1, 'loss_function': 'Logloss', 'learning_rate': 0.03359999880194664, 'score_function': 'Cosine', 'task_type': 'CPU', 'leaf_estimation_iterations': 10, 'bootstrap_type': 'MVS', 'max_leaves': 64}
2023-11-09 19:22:48,574:INFO:Initializing predict_model()
2023-11-09 19:22:48,574:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-09 19:22:48,575:INFO:Checking exceptions
2023-11-09 19:22:48,575:INFO:Preloading libraries
2023-11-09 19:22:49,047:INFO:Initializing create_model()
2023-11-09 19:22:49,047:INFO:create_model(estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-11-09 19:22:49,047:INFO:Checking exceptions
2023-11-09 19:22:49,049:INFO:Importing libraries
2023-11-09 19:22:49,049:INFO:Copying training dataset
2023-11-09 19:22:49,051:INFO:Defining folds
2023-11-09 19:22:49,052:INFO:Declaring metric variables
2023-11-09 19:22:49,052:INFO:Importing untrained model
2023-11-09 19:22:49,052:INFO:Declaring custom model
2023-11-09 19:22:49,053:INFO:Ada Boost Classifier Imported succesfully
2023-11-09 19:22:49,053:INFO:Cross validation set to False
2023-11-09 19:22:49,054:INFO:Fitting Model
2023-11-09 19:22:50,088:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2023-11-09 19:22:50,089:INFO:create_models() succesfully completed......................................
2023-11-09 19:22:50,209:INFO:Creating Dashboard logs
2023-11-09 19:22:50,223:INFO:Model: Ada Boost Classifier
2023-11-09 19:22:50,249:INFO:logged params: {'algorithm': 'SAMME.R', 'base_estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2023-11-09 19:22:50,274:INFO:Initializing predict_model()
2023-11-09 19:22:50,274:INFO:predict_model(estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-09 19:22:50,274:INFO:Checking exceptions
2023-11-09 19:22:50,274:INFO:Preloading libraries
2023-11-09 19:22:50,910:INFO:Creating Dashboard logs
2023-11-09 19:22:50,929:INFO:Model: Light Gradient Boosting Machine
2023-11-09 19:22:50,964:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': 1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': 'warn', 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2023-11-09 19:22:51,181:INFO:Creating Dashboard logs
2023-11-09 19:22:51,213:INFO:Model: Linear Discriminant Analysis
2023-11-09 19:22:51,233:INFO:logged params: {'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2023-11-09 19:22:51,447:INFO:Creating Dashboard logs
2023-11-09 19:22:51,476:INFO:Model: Logistic Regression
2023-11-09 19:22:51,509:INFO:logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2023-11-09 19:22:51,819:INFO:Creating Dashboard logs
2023-11-09 19:22:51,847:INFO:Model: Extreme Gradient Boosting
2023-11-09 19:22:51,883:INFO:logged params: {'objective': 'binary:logistic', 'use_label_encoder': False, 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'gamma': None, 'gpu_id': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'n_estimators': 100, 'n_jobs': 1, 'num_parallel_tree': None, 'predictor': None, 'random_state': 123, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2023-11-09 19:22:52,146:INFO:Creating Dashboard logs
2023-11-09 19:22:52,172:INFO:Model: Random Forest Classifier
2023-11-09 19:22:52,202:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': 1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2023-11-09 19:22:52,446:INFO:Creating Dashboard logs
2023-11-09 19:22:52,469:INFO:Model: Naive Bayes
2023-11-09 19:22:52,492:INFO:logged params: {'priors': None, 'var_smoothing': 1e-09}
2023-11-09 19:22:52,698:INFO:Creating Dashboard logs
2023-11-09 19:22:52,719:INFO:Model: Extra Trees Classifier
2023-11-09 19:22:52,750:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': 1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2023-11-09 19:22:53,312:INFO:Creating Dashboard logs
2023-11-09 19:22:53,341:INFO:Model: Quadratic Discriminant Analysis
2023-11-09 19:22:53,395:INFO:logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2023-11-09 19:22:53,695:INFO:Creating Dashboard logs
2023-11-09 19:22:53,717:INFO:Model: K Neighbors Classifier
2023-11-09 19:22:53,756:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': 1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2023-11-09 19:22:53,982:INFO:Creating Dashboard logs
2023-11-09 19:22:54,005:INFO:Model: Decision Tree Classifier
2023-11-09 19:22:54,028:INFO:logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 123, 'splitter': 'best'}
2023-11-09 19:22:54,278:INFO:Creating Dashboard logs
2023-11-09 19:22:54,294:INFO:Model: Dummy Classifier
2023-11-09 19:22:54,322:INFO:logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2023-11-09 19:22:54,551:INFO:Creating Dashboard logs
2023-11-09 19:22:54,569:INFO:Model: SVM - Linear Kernel
2023-11-09 19:22:54,596:INFO:logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': 1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-11-09 19:22:55,041:INFO:Creating Dashboard logs
2023-11-09 19:22:55,066:INFO:Model: Ridge Classifier
2023-11-09 19:22:55,091:INFO:logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.001}
2023-11-09 19:22:55,403:INFO:create_model_container: 16
2023-11-09 19:22:55,404:INFO:master_model_container: 16
2023-11-09 19:22:55,404:INFO:display_container: 2
2023-11-09 19:22:55,407:INFO:[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), <catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)]
2023-11-09 19:22:55,407:INFO:compare_models() succesfully completed......................................
2023-11-09 19:26:17,176:INFO:Initializing predict_model()
2023-11-09 19:26:17,178:INFO:predict_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-09 19:26:17,178:INFO:Checking exceptions
2023-11-09 19:26:17,178:INFO:Preloading libraries
2023-11-09 19:26:17,179:INFO:Preparing display monitor
2023-11-09 19:26:37,064:INFO:Initializing predict_model()
2023-11-09 19:26:37,064:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-09 19:26:37,065:INFO:Checking exceptions
2023-11-09 19:26:37,066:INFO:Preloading libraries
2023-11-09 19:26:37,066:INFO:Preparing display monitor
2023-11-09 19:28:43,069:INFO:Initializing finalize_model()
2023-11-09 19:28:43,070:INFO:finalize_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2023-11-09 19:28:43,072:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-09 19:28:43,074:INFO:Initializing create_model()
2023-11-09 19:28:43,074:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-11-09 19:28:43,075:INFO:Checking exceptions
2023-11-09 19:28:43,075:INFO:Importing libraries
2023-11-09 19:28:43,076:INFO:Copying training dataset
2023-11-09 19:28:43,103:INFO:Defining folds
2023-11-09 19:28:43,103:INFO:Declaring metric variables
2023-11-09 19:28:43,104:INFO:Importing untrained model
2023-11-09 19:28:43,104:INFO:Declaring custom model
2023-11-09 19:28:43,106:INFO:Gradient Boosting Classifier Imported succesfully
2023-11-09 19:28:43,107:INFO:Starting cross validation
2023-11-09 19:28:43,110:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:29:02,205:INFO:Calculating mean and std
2023-11-09 19:29:02,207:INFO:Creating metrics dataframe
2023-11-09 19:29:02,223:INFO:Finalizing model
2023-11-09 19:29:05,911:INFO:create_model_container: 16
2023-11-09 19:29:05,911:INFO:master_model_container: 16
2023-11-09 19:29:05,911:INFO:display_container: 5
2023-11-09 19:29:05,911:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-09 19:29:05,911:INFO:create_model() succesfully completed......................................
2023-11-09 19:29:06,201:INFO:Creating Dashboard logs
2023-11-09 19:29:06,202:INFO:Model: Gradient Boosting Classifier
2023-11-09 19:29:06,230:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'deviance', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-11-09 19:29:06,287:INFO:Initializing predict_model()
2023-11-09 19:29:06,288:INFO:predict_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-09 19:29:06,288:INFO:Checking exceptions
2023-11-09 19:29:06,288:INFO:Preloading libraries
2023-11-09 19:29:06,970:INFO:create_model_container: 16
2023-11-09 19:29:06,970:INFO:master_model_container: 16
2023-11-09 19:29:06,971:INFO:display_container: 4
2023-11-09 19:29:06,971:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-09 19:29:06,971:INFO:finalize_model() succesfully completed......................................
2023-11-09 19:29:16,820:INFO:Initializing finalize_model()
2023-11-09 19:29:16,826:INFO:finalize_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2023-11-09 19:29:16,827:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>
2023-11-09 19:29:16,827:INFO:Initializing create_model()
2023-11-09 19:29:16,828:INFO:create_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-11-09 19:29:16,828:INFO:Checking exceptions
2023-11-09 19:29:16,828:INFO:Importing libraries
2023-11-09 19:29:16,829:INFO:Copying training dataset
2023-11-09 19:29:16,831:INFO:Defining folds
2023-11-09 19:29:16,832:INFO:Declaring metric variables
2023-11-09 19:29:16,832:INFO:Importing untrained model
2023-11-09 19:29:16,833:INFO:Declaring custom model
2023-11-09 19:29:16,836:INFO:CatBoost Classifier Imported succesfully
2023-11-09 19:29:16,836:INFO:Starting cross validation
2023-11-09 19:29:16,838:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:30:24,212:INFO:Calculating mean and std
2023-11-09 19:30:24,214:INFO:Creating metrics dataframe
2023-11-09 19:30:24,224:INFO:Finalizing model
2023-11-09 19:30:35,638:INFO:create_model_container: 16
2023-11-09 19:30:35,639:INFO:master_model_container: 16
2023-11-09 19:30:35,639:INFO:display_container: 5
2023-11-09 19:30:35,639:INFO:<catboost.core.CatBoostClassifier object at 0x7f7b09f8e5c0>
2023-11-09 19:30:35,639:INFO:create_model() succesfully completed......................................
2023-11-09 19:30:35,812:INFO:Creating Dashboard logs
2023-11-09 19:30:35,812:INFO:Model: CatBoost Classifier
2023-11-09 19:30:35,838:INFO:logged params: {'nan_mode': 'Min', 'eval_metric': 'Logloss', 'iterations': 1000, 'sampling_frequency': 'PerTree', 'leaf_estimation_method': 'Newton', 'grow_policy': 'SymmetricTree', 'penalties_coefficient': 1, 'boosting_type': 'Plain', 'model_shrink_mode': 'Constant', 'feature_border_type': 'GreedyLogSum', 'bayesian_matrix_reg': 0.10000000149011612, 'eval_fraction': 0, 'force_unit_auto_pair_weights': False, 'l2_leaf_reg': 3, 'random_strength': 1, 'rsm': 1, 'boost_from_average': False, 'model_size_reg': 0.5, 'pool_metainfo_options': {'tags': {}}, 'subsample': 0.800000011920929, 'use_best_model': False, 'class_names': [0, 1], 'random_seed': 123, 'depth': 6, 'posterior_sampling': False, 'border_count': 254, 'classes_count': 0, 'auto_class_weights': 'None', 'sparse_features_conflict_fraction': 0, 'leaf_estimation_backtracking': 'AnyImprovement', 'best_model_min_trees': 1, 'model_shrink_rate': 0, 'min_data_in_leaf': 1, 'loss_function': 'Logloss', 'learning_rate': 0.036958999931812286, 'score_function': 'Cosine', 'task_type': 'CPU', 'leaf_estimation_iterations': 10, 'bootstrap_type': 'MVS', 'max_leaves': 64}
2023-11-09 19:30:35,905:INFO:Initializing predict_model()
2023-11-09 19:30:35,905:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b09f8e5c0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-09 19:30:35,905:INFO:Checking exceptions
2023-11-09 19:30:35,906:INFO:Preloading libraries
2023-11-09 19:30:36,751:INFO:create_model_container: 16
2023-11-09 19:30:36,751:INFO:master_model_container: 16
2023-11-09 19:30:36,751:INFO:display_container: 4
2023-11-09 19:30:36,751:INFO:<catboost.core.CatBoostClassifier object at 0x7f7b09f8e5c0>
2023-11-09 19:30:36,751:INFO:finalize_model() succesfully completed......................................
2023-11-09 19:30:45,280:INFO:Initializing finalize_model()
2023-11-09 19:30:45,281:INFO:finalize_model(estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2023-11-09 19:30:45,283:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2023-11-09 19:30:45,284:INFO:Initializing create_model()
2023-11-09 19:30:45,284:INFO:create_model(estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-11-09 19:30:45,284:INFO:Checking exceptions
2023-11-09 19:30:45,285:INFO:Importing libraries
2023-11-09 19:30:45,285:INFO:Copying training dataset
2023-11-09 19:30:45,290:INFO:Defining folds
2023-11-09 19:30:45,291:INFO:Declaring metric variables
2023-11-09 19:30:45,291:INFO:Importing untrained model
2023-11-09 19:30:45,292:INFO:Declaring custom model
2023-11-09 19:30:45,293:INFO:Ada Boost Classifier Imported succesfully
2023-11-09 19:30:45,293:INFO:Starting cross validation
2023-11-09 19:30:45,296:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:30:52,880:INFO:Calculating mean and std
2023-11-09 19:30:52,882:INFO:Creating metrics dataframe
2023-11-09 19:30:52,888:INFO:Finalizing model
2023-11-09 19:30:54,061:INFO:create_model_container: 16
2023-11-09 19:30:54,061:INFO:master_model_container: 16
2023-11-09 19:30:54,061:INFO:display_container: 5
2023-11-09 19:30:54,061:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2023-11-09 19:30:54,061:INFO:create_model() succesfully completed......................................
2023-11-09 19:30:54,176:INFO:Creating Dashboard logs
2023-11-09 19:30:54,176:INFO:Model: Ada Boost Classifier
2023-11-09 19:30:54,198:INFO:logged params: {'algorithm': 'SAMME.R', 'base_estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2023-11-09 19:30:54,226:INFO:Initializing predict_model()
2023-11-09 19:30:54,226:INFO:predict_model(estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-09 19:30:54,226:INFO:Checking exceptions
2023-11-09 19:30:54,226:INFO:Preloading libraries
2023-11-09 19:30:54,805:INFO:create_model_container: 16
2023-11-09 19:30:54,805:INFO:master_model_container: 16
2023-11-09 19:30:54,805:INFO:display_container: 4
2023-11-09 19:30:54,806:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2023-11-09 19:30:54,806:INFO:finalize_model() succesfully completed......................................
2023-11-09 19:31:34,309:INFO:Initializing save_model()
2023-11-09 19:31:34,309:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=models/pycaret/best_model_0_finalized, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2023-11-09 19:31:34,310:INFO:Adding model into prep_pipe
2023-11-09 19:31:34,412:INFO:models/pycaret/best_model_0_finalized.pkl saved in current working directory
2023-11-09 19:31:34,427:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                                            learning_rate=0.1, loss='deviance',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_impurity_split=None,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            presort='deprecated',
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False)]],
         verbose=False)
2023-11-09 19:31:34,427:INFO:save_model() successfully completed......................................
2023-11-09 19:31:44,596:INFO:Initializing save_model()
2023-11-09 19:31:44,596:INFO:save_model(model=<catboost.core.CatBoostClassifier object at 0x7f7b09f8e5c0>, model_name=models/best_model_1_finalized, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2023-11-09 19:31:44,596:INFO:Adding model into prep_pipe
2023-11-09 19:31:44,642:INFO:models/best_model_1_finalized.pkl saved in current working directory
2023-11-09 19:31:44,682:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 <catboost.core.CatBoostClassifier object at 0x7f7b09f8e5c0>]],
         verbose=False)
2023-11-09 19:31:44,682:INFO:save_model() successfully completed......................................
2023-11-09 19:31:50,284:INFO:Initializing save_model()
2023-11-09 19:31:50,286:INFO:save_model(model=AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), model_name=models/best_model_2_finalized, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2023-11-09 19:31:50,286:INFO:Adding model into prep_pipe
2023-11-09 19:31:50,386:INFO:models/best_model_2_finalized.pkl saved in current working directory
2023-11-09 19:31:50,399:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123)]],
         verbose=False)
2023-11-09 19:31:50,399:INFO:save_model() successfully completed......................................
2023-11-09 19:33:40,934:INFO:Initializing load_model()
2023-11-09 19:33:40,935:INFO:load_model(model_name=models/best_model_0_finalized, platform=None, authentication=None, verbose=True)
2023-11-09 19:33:51,819:INFO:Initializing load_model()
2023-11-09 19:33:51,820:INFO:load_model(model_name=models/pycaret/best_model_0_finalized, platform=None, authentication=None, verbose=True)
2023-11-09 19:34:03,862:INFO:Initializing plot_model()
2023-11-09 19:34:03,862:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot=auc, plot_kwargs=None, save=False, scale=1, system=True)
2023-11-09 19:34:03,862:INFO:Checking exceptions
2023-11-09 19:34:03,868:INFO:Preparing display monitor
2023-11-09 19:34:03,885:INFO:Preloading libraries
2023-11-09 19:34:03,895:INFO:Copying training dataset
2023-11-09 19:34:03,908:INFO:Copying test dataset
2023-11-09 19:34:03,913:INFO:Plot type: auc
2023-11-09 19:34:03,918:INFO:Initializing get_config()
2023-11-09 19:34:03,919:INFO:get_config(variable=prep_pipe)
2023-11-09 19:34:03,964:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-11-09 19:34:03,967:INFO:get_config() succesfully completed......................................
2023-11-09 19:34:04,001:INFO:Fitting Model
2023-11-09 19:34:04,013:INFO:Scoring test/hold-out set
2023-11-09 19:34:05,262:INFO:Visual Rendered Successfully
2023-11-09 19:34:05,812:INFO:plot_model() succesfully completed......................................
2023-11-09 19:35:42,211:INFO:Initializing plot_model()
2023-11-09 19:35:42,212:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=auc, plot_kwargs=None, save=False, scale=1, system=True)
2023-11-09 19:35:42,213:INFO:Checking exceptions
2023-11-09 19:35:42,219:INFO:Preparing display monitor
2023-11-09 19:35:42,267:INFO:Preloading libraries
2023-11-09 19:35:42,294:INFO:Copying training dataset
2023-11-09 19:35:42,305:INFO:Copying test dataset
2023-11-09 19:35:42,324:INFO:Plot type: auc
2023-11-09 19:35:42,330:INFO:Initializing get_config()
2023-11-09 19:35:42,332:INFO:get_config(variable=prep_pipe)
2023-11-09 19:35:42,345:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-11-09 19:35:42,345:INFO:get_config() succesfully completed......................................
2023-11-09 19:35:42,347:INFO:Fitting Model
2023-11-09 19:35:42,350:INFO:Scoring test/hold-out set
2023-11-09 19:35:43,277:INFO:Visual Rendered Successfully
2023-11-09 19:35:43,414:INFO:plot_model() succesfully completed......................................
2023-11-09 19:36:38,600:INFO:Initializing plot_model()
2023-11-09 19:36:38,601:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot=pr, plot_kwargs=None, save=False, scale=1, system=True)
2023-11-09 19:36:38,602:INFO:Checking exceptions
2023-11-09 19:36:38,604:INFO:Preparing display monitor
2023-11-09 19:36:38,625:INFO:Preloading libraries
2023-11-09 19:36:38,633:INFO:Copying training dataset
2023-11-09 19:36:38,638:INFO:Copying test dataset
2023-11-09 19:36:38,639:INFO:Plot type: pr
2023-11-09 19:36:38,648:INFO:Fitting Model
2023-11-09 19:36:38,651:INFO:Scoring test/hold-out set
2023-11-09 19:36:39,156:INFO:Visual Rendered Successfully
2023-11-09 19:36:39,287:INFO:plot_model() succesfully completed......................................
2023-11-09 19:37:04,152:INFO:Initializing plot_model()
2023-11-09 19:37:04,154:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot=auc, plot_kwargs=None, save=False, scale=1, system=True)
2023-11-09 19:37:04,154:INFO:Checking exceptions
2023-11-09 19:37:04,157:INFO:Preparing display monitor
2023-11-09 19:37:04,169:INFO:Preloading libraries
2023-11-09 19:37:04,173:INFO:Copying training dataset
2023-11-09 19:37:04,176:INFO:Copying test dataset
2023-11-09 19:37:04,179:INFO:Plot type: auc
2023-11-09 19:37:04,182:INFO:Initializing get_config()
2023-11-09 19:37:04,183:INFO:get_config(variable=prep_pipe)
2023-11-09 19:37:04,197:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-11-09 19:37:04,197:INFO:get_config() succesfully completed......................................
2023-11-09 19:37:04,198:INFO:Fitting Model
2023-11-09 19:37:04,201:INFO:Scoring test/hold-out set
2023-11-09 19:37:06,099:INFO:Visual Rendered Successfully
2023-11-09 19:37:06,309:INFO:plot_model() succesfully completed......................................
2023-11-09 19:38:06,378:INFO:Initializing plot_model()
2023-11-09 19:38:06,380:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot=tree, plot_kwargs=None, save=False, scale=1, system=True)
2023-11-09 19:38:06,380:INFO:Checking exceptions
2023-11-09 19:38:57,012:INFO:Initializing plot_model()
2023-11-09 19:38:57,014:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot=confusion_matrix, plot_kwargs=None, save=False, scale=1, system=True)
2023-11-09 19:38:57,014:INFO:Checking exceptions
2023-11-09 19:38:57,018:INFO:Preparing display monitor
2023-11-09 19:38:57,036:INFO:Preloading libraries
2023-11-09 19:38:57,049:INFO:Copying training dataset
2023-11-09 19:38:57,062:INFO:Copying test dataset
2023-11-09 19:38:57,069:INFO:Plot type: confusion_matrix
2023-11-09 19:38:57,080:INFO:Initializing get_config()
2023-11-09 19:38:57,080:INFO:get_config(variable=prep_pipe)
2023-11-09 19:38:57,096:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-11-09 19:38:57,098:INFO:get_config() succesfully completed......................................
2023-11-09 19:38:57,106:INFO:Fitting Model
2023-11-09 19:38:57,112:INFO:Scoring test/hold-out set
2023-11-09 19:38:57,857:INFO:Visual Rendered Successfully
2023-11-09 19:38:58,622:INFO:plot_model() succesfully completed......................................
2023-11-09 19:39:32,330:INFO:Initializing plot_model()
2023-11-09 19:39:32,332:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot=gain, plot_kwargs=None, save=False, scale=1, system=True)
2023-11-09 19:39:32,333:INFO:Checking exceptions
2023-11-09 19:39:32,338:INFO:Preparing display monitor
2023-11-09 19:39:32,351:INFO:Preloading libraries
2023-11-09 19:39:32,354:INFO:Copying training dataset
2023-11-09 19:39:32,356:INFO:Copying test dataset
2023-11-09 19:39:32,357:INFO:Plot type: gain
2023-11-09 19:39:32,360:INFO:Generating predictions / predict_proba on X_test
2023-11-09 19:39:33,099:INFO:Visual Rendered Successfully
2023-11-09 19:39:33,240:INFO:plot_model() succesfully completed......................................
2023-11-09 19:40:03,707:INFO:Initializing plot_model()
2023-11-09 19:40:03,708:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot=lift, plot_kwargs=None, save=False, scale=1, system=True)
2023-11-09 19:40:03,708:INFO:Checking exceptions
2023-11-09 19:40:03,711:INFO:Preparing display monitor
2023-11-09 19:40:03,734:INFO:Preloading libraries
2023-11-09 19:40:03,739:INFO:Copying training dataset
2023-11-09 19:40:03,742:INFO:Copying test dataset
2023-11-09 19:40:03,743:INFO:Plot type: lift
2023-11-09 19:40:03,747:INFO:Generating predictions / predict_proba on X_test
2023-11-09 19:40:04,458:INFO:Visual Rendered Successfully
2023-11-09 19:40:04,598:INFO:plot_model() succesfully completed......................................
2023-11-09 19:40:37,210:INFO:Initializing plot_model()
2023-11-09 19:40:37,212:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, system=True)
2023-11-09 19:40:37,212:INFO:Checking exceptions
2023-11-09 19:40:37,222:INFO:Preparing display monitor
2023-11-09 19:40:37,270:INFO:Preloading libraries
2023-11-09 19:40:37,275:INFO:Copying training dataset
2023-11-09 19:40:37,291:INFO:Copying test dataset
2023-11-09 19:40:37,291:INFO:Plot type: feature
2023-11-09 19:40:37,297:WARNING:No coef_ found. Trying feature_importances_
2023-11-09 19:40:37,917:INFO:Visual Rendered Successfully
2023-11-09 19:40:38,058:INFO:plot_model() succesfully completed......................................
2023-11-09 19:42:41,571:INFO:Initializing plot_model()
2023-11-09 19:42:41,572:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=gain, plot_kwargs=None, save=False, scale=1, system=True)
2023-11-09 19:42:41,574:INFO:Checking exceptions
2023-11-09 19:42:41,581:INFO:Preparing display monitor
2023-11-09 19:42:41,593:INFO:Preloading libraries
2023-11-09 19:42:41,624:INFO:Copying training dataset
2023-11-09 19:42:41,630:INFO:Copying test dataset
2023-11-09 19:42:41,632:INFO:Plot type: gain
2023-11-09 19:42:41,643:INFO:Generating predictions / predict_proba on X_test
2023-11-09 19:42:43,107:INFO:Visual Rendered Successfully
2023-11-09 19:42:43,741:INFO:plot_model() succesfully completed......................................
2023-11-09 19:43:04,200:INFO:Initializing plot_model()
2023-11-09 19:43:04,201:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=pr, plot_kwargs=None, save=False, scale=1, system=True)
2023-11-09 19:43:04,202:INFO:Checking exceptions
2023-11-09 19:43:04,210:INFO:Preparing display monitor
2023-11-09 19:43:04,222:INFO:Preloading libraries
2023-11-09 19:43:04,245:INFO:Copying training dataset
2023-11-09 19:43:04,248:INFO:Copying test dataset
2023-11-09 19:43:04,249:INFO:Plot type: pr
2023-11-09 19:43:04,257:INFO:Fitting Model
2023-11-09 19:43:04,259:INFO:Scoring test/hold-out set
2023-11-09 19:43:05,527:INFO:Visual Rendered Successfully
2023-11-09 19:43:05,792:INFO:plot_model() succesfully completed......................................
2023-11-09 19:43:34,878:INFO:Initializing plot_model()
2023-11-09 19:43:34,880:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, feature_name=None, fit_kwargs=None, groups=None, label=False, plot=class_report, plot_kwargs=None, save=False, scale=1, system=True)
2023-11-09 19:43:34,880:INFO:Checking exceptions
2023-11-09 19:43:34,885:INFO:Preparing display monitor
2023-11-09 19:43:34,896:INFO:Preloading libraries
2023-11-09 19:43:34,900:INFO:Copying training dataset
2023-11-09 19:43:34,909:INFO:Copying test dataset
2023-11-09 19:43:34,910:INFO:Plot type: class_report
2023-11-09 19:43:34,912:INFO:Initializing get_config()
2023-11-09 19:43:34,913:INFO:get_config(variable=prep_pipe)
2023-11-09 19:43:34,922:INFO:Global variable: prep_pipe returned as Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2023-11-09 19:43:34,922:INFO:get_config() succesfully completed......................................
2023-11-09 19:43:34,924:INFO:Fitting Model
2023-11-09 19:43:34,925:INFO:Scoring test/hold-out set
2023-11-09 19:43:35,839:INFO:Visual Rendered Successfully
2023-11-09 19:43:36,241:INFO:plot_model() succesfully completed......................................
2023-11-09 19:44:16,378:INFO:Initializing plot_model()
2023-11-09 19:44:16,380:INFO:plot_model(fold=None, use_train_data=False, verbose=True, is_in_evaluate=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=parameter, plot_kwargs=None, save=False, scale=1, system=True)
2023-11-09 19:44:16,380:INFO:Checking exceptions
2023-11-09 19:44:16,396:INFO:Preparing display monitor
2023-11-09 19:44:16,415:INFO:Preloading libraries
2023-11-09 19:44:16,437:INFO:Copying training dataset
2023-11-09 19:44:16,446:INFO:Copying test dataset
2023-11-09 19:44:16,446:INFO:Plot type: parameter
2023-11-09 19:44:16,513:INFO:Visual Rendered Successfully
2023-11-09 19:44:16,970:INFO:plot_model() succesfully completed......................................
2023-11-09 19:46:18,451:INFO:Initializing create_model()
2023-11-09 19:46:18,452:INFO:create_model(estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-11-09 19:46:18,453:INFO:Checking exceptions
2023-11-09 19:46:18,455:INFO:Preparing display monitor
2023-11-09 19:46:18,522:INFO:Importing libraries
2023-11-09 19:46:18,522:INFO:Copying training dataset
2023-11-09 19:46:18,537:INFO:Defining folds
2023-11-09 19:46:18,538:INFO:Declaring metric variables
2023-11-09 19:46:18,562:INFO:Importing untrained model
2023-11-09 19:46:18,608:INFO:Extreme Gradient Boosting Imported succesfully
2023-11-09 19:46:18,814:INFO:Starting cross validation
2023-11-09 19:46:18,826:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:46:58,322:INFO:Calculating mean and std
2023-11-09 19:46:58,326:INFO:Creating metrics dataframe
2023-11-09 19:46:58,363:INFO:Finalizing model
2023-11-09 19:47:08,948:INFO:Creating Dashboard logs
2023-11-09 19:47:08,997:INFO:Model: Extreme Gradient Boosting
2023-11-09 19:47:09,042:INFO:logged params: {'objective': 'binary:logistic', 'use_label_encoder': False, 'base_score': 0.5, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'gamma': 0, 'gpu_id': -1, 'grow_policy': 'depthwise', 'importance_type': None, 'interaction_constraints': '', 'learning_rate': 0.300000012, 'max_bin': 256, 'max_cat_to_onehot': 4, 'max_delta_step': 0, 'max_depth': 6, 'max_leaves': 0, 'min_child_weight': 1, 'missing': nan, 'monotone_constraints': '()', 'n_estimators': 100, 'n_jobs': 1, 'num_parallel_tree': 1, 'predictor': 'auto', 'random_state': 123, 'reg_alpha': 0, 'reg_lambda': 1, 'sampling_method': 'uniform', 'scale_pos_weight': 1, 'subsample': 1, 'tree_method': 'auto', 'validate_parameters': 1, 'verbosity': 0}
2023-11-09 19:47:09,132:INFO:Initializing predict_model()
2023-11-09 19:47:09,133:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,
              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
              early_stopping_rounds=None, enable_categorical=False,
              eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
              importance_type=None, interaction_constraints='',
              learning_rate=0.300000012, max_bin=256, max_cat_to_onehot=4,
              max_delta_step=0, max_depth=6, max_leaves=0, min_child_weight=1,
              missing=nan, monotone_constraints='()', n_estimators=100,
              n_jobs=1, num_parallel_tree=1, objective='binary:logistic',
              predictor='auto', random_state=123, reg_alpha=0, ...), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-09 19:47:09,133:INFO:Checking exceptions
2023-11-09 19:47:09,133:INFO:Preloading libraries
2023-11-09 19:47:11,377:INFO:Uploading results into container
2023-11-09 19:47:11,379:INFO:Uploading model into container now
2023-11-09 19:47:11,445:INFO:create_model_container: 17
2023-11-09 19:47:11,445:INFO:master_model_container: 17
2023-11-09 19:47:11,445:INFO:display_container: 5
2023-11-09 19:47:11,452:INFO:XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,
              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
              early_stopping_rounds=None, enable_categorical=False,
              eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
              importance_type=None, interaction_constraints='',
              learning_rate=0.300000012, max_bin=256, max_cat_to_onehot=4,
              max_delta_step=0, max_depth=6, max_leaves=0, min_child_weight=1,
              missing=nan, monotone_constraints='()', n_estimators=100,
              n_jobs=1, num_parallel_tree=1, objective='binary:logistic',
              predictor='auto', random_state=123, reg_alpha=0, ...)
2023-11-09 19:47:11,453:INFO:create_model() succesfully completed......................................
2023-11-09 19:49:27,799:INFO:Initializing tune_model()
2023-11-09 19:49:27,800:INFO:tune_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,
              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
              early_stopping_rounds=None, enable_categorical=False,
              eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
              importance_type=None, interaction_constraints='',
              learning_rate=0.300000012, max_bin=256, max_cat_to_onehot=4,
              max_delta_step=0, max_depth=6, max_leaves=0, min_child_weight=1,
              missing=nan, monotone_constraints='()', n_estimators=100,
              n_jobs=1, num_parallel_tree=1, objective='binary:logistic',
              predictor='auto', random_state=123, reg_alpha=0, ...), fold=None, round=4, n_iter=5, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2023-11-09 19:49:27,800:INFO:Checking exceptions
2023-11-09 19:49:27,802:INFO:Preparing display monitor
2023-11-09 19:49:27,861:INFO:Copying training dataset
2023-11-09 19:49:27,872:INFO:Checking base model
2023-11-09 19:49:27,873:INFO:Base model : Extreme Gradient Boosting
2023-11-09 19:49:27,916:INFO:Declaring metric variables
2023-11-09 19:49:27,948:INFO:Defining Hyperparameters
2023-11-09 19:49:28,285:INFO:Tuning with n_jobs=1
2023-11-09 19:49:28,286:INFO:Initializing RandomizedSearchCV
2023-11-09 19:53:02,950:INFO:best_params: {'actual_estimator__subsample': 1, 'actual_estimator__scale_pos_weight': 35.1, 'actual_estimator__reg_lambda': 0.5, 'actual_estimator__reg_alpha': 0.0005, 'actual_estimator__n_estimators': 100, 'actual_estimator__min_child_weight': 1, 'actual_estimator__max_depth': 1, 'actual_estimator__learning_rate': 0.5, 'actual_estimator__colsample_bytree': 1}
2023-11-09 19:53:02,952:INFO:Hyperparameter search completed
2023-11-09 19:53:02,952:INFO:SubProcess create_model() called ==================================
2023-11-09 19:53:02,956:INFO:Initializing create_model()
2023-11-09 19:53:02,957:INFO:create_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,
              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
              early_stopping_rounds=None, enable_categorical=False,
              eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
              importance_type=None, interaction_constraints='',
              learning_rate=0.300000012, max_bin=256, max_cat_to_onehot=4,
              max_delta_step=0, max_depth=6, max_leaves=0, min_child_weight=1,
              missing=nan, monotone_constraints='()', n_estimators=100,
              n_jobs=1, num_parallel_tree=1, objective='binary:logistic',
              predictor='auto', random_state=123, reg_alpha=0, ...), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b0a2a8a20>, return_train_score=False, kwargs={'subsample': 1, 'scale_pos_weight': 35.1, 'reg_lambda': 0.5, 'reg_alpha': 0.0005, 'n_estimators': 100, 'min_child_weight': 1, 'max_depth': 1, 'learning_rate': 0.5, 'colsample_bytree': 1})
2023-11-09 19:53:02,957:INFO:Checking exceptions
2023-11-09 19:53:02,957:INFO:Importing libraries
2023-11-09 19:53:02,957:INFO:Copying training dataset
2023-11-09 19:53:02,961:INFO:Defining folds
2023-11-09 19:53:02,962:INFO:Declaring metric variables
2023-11-09 19:53:02,995:INFO:Importing untrained model
2023-11-09 19:53:02,995:INFO:Declaring custom model
2023-11-09 19:53:03,060:INFO:Extreme Gradient Boosting Imported succesfully
2023-11-09 19:53:03,121:INFO:Starting cross validation
2023-11-09 19:53:03,123:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 19:53:10,135:INFO:Calculating mean and std
2023-11-09 19:53:10,137:INFO:Creating metrics dataframe
2023-11-09 19:53:10,176:INFO:Finalizing model
2023-11-09 19:53:11,847:INFO:Uploading results into container
2023-11-09 19:53:11,848:INFO:Uploading model into container now
2023-11-09 19:53:11,849:INFO:create_model_container: 18
2023-11-09 19:53:11,849:INFO:master_model_container: 18
2023-11-09 19:53:11,849:INFO:display_container: 6
2023-11-09 19:53:11,853:INFO:XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,
              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
              early_stopping_rounds=None, enable_categorical=False,
              eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
              importance_type=None, interaction_constraints='',
              learning_rate=0.5, max_bin=256, max_cat_to_onehot=4,
              max_delta_step=0, max_depth=1, max_leaves=0, min_child_weight=1,
              missing=nan, monotone_constraints='()', n_estimators=100,
              n_jobs=1, num_parallel_tree=1, objective='binary:logistic',
              predictor='auto', random_state=123, reg_alpha=0.0005, ...)
2023-11-09 19:53:11,854:INFO:create_model() succesfully completed......................................
2023-11-09 19:53:11,993:INFO:SubProcess create_model() end ==================================
2023-11-09 19:53:11,994:INFO:Creating Dashboard logs
2023-11-09 19:53:12,012:INFO:Model: Extreme Gradient Boosting
2023-11-09 19:53:12,041:INFO:logged params: {'objective': 'binary:logistic', 'use_label_encoder': False, 'base_score': 0.5, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'gamma': 0, 'gpu_id': -1, 'grow_policy': 'depthwise', 'importance_type': None, 'interaction_constraints': '', 'learning_rate': 0.5, 'max_bin': 256, 'max_cat_to_onehot': 4, 'max_delta_step': 0, 'max_depth': 1, 'max_leaves': 0, 'min_child_weight': 1, 'missing': nan, 'monotone_constraints': '()', 'n_estimators': 100, 'n_jobs': 1, 'num_parallel_tree': 1, 'predictor': 'auto', 'random_state': 123, 'reg_alpha': 0.0005, 'reg_lambda': 0.5, 'sampling_method': 'uniform', 'scale_pos_weight': 35.1, 'subsample': 1, 'tree_method': 'auto', 'validate_parameters': 1, 'verbosity': 0}
2023-11-09 19:53:12,104:INFO:Initializing predict_model()
2023-11-09 19:53:12,104:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,
              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
              early_stopping_rounds=None, enable_categorical=False,
              eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
              importance_type=None, interaction_constraints='',
              learning_rate=0.5, max_bin=256, max_cat_to_onehot=4,
              max_delta_step=0, max_depth=1, max_leaves=0, min_child_weight=1,
              missing=nan, monotone_constraints='()', n_estimators=100,
              n_jobs=1, num_parallel_tree=1, objective='binary:logistic',
              predictor='auto', random_state=123, reg_alpha=0.0005, ...), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-09 19:53:12,104:INFO:Checking exceptions
2023-11-09 19:53:12,104:INFO:Preloading libraries
2023-11-09 19:53:12,810:INFO:create_model_container: 18
2023-11-09 19:53:12,810:INFO:master_model_container: 18
2023-11-09 19:53:12,811:INFO:display_container: 6
2023-11-09 19:53:12,817:INFO:XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,
              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
              early_stopping_rounds=None, enable_categorical=False,
              eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
              importance_type=None, interaction_constraints='',
              learning_rate=0.5, max_bin=256, max_cat_to_onehot=4,
              max_delta_step=0, max_depth=1, max_leaves=0, min_child_weight=1,
              missing=nan, monotone_constraints='()', n_estimators=100,
              n_jobs=1, num_parallel_tree=1, objective='binary:logistic',
              predictor='auto', random_state=123, reg_alpha=0.0005, ...)
2023-11-09 19:53:12,817:INFO:tune_model() succesfully completed......................................
2023-11-09 20:01:30,742:INFO:Initializing finalize_model()
2023-11-09 20:01:30,745:INFO:finalize_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,
              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
              early_stopping_rounds=None, enable_categorical=False,
              eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
              importance_type=None, interaction_constraints='',
              learning_rate=0.5, max_bin=256, max_cat_to_onehot=4,
              max_delta_step=0, max_depth=1, max_leaves=0, min_child_weight=1,
              missing=nan, monotone_constraints='()', n_estimators=100,
              n_jobs=1, num_parallel_tree=1, objective='binary:logistic',
              predictor='auto', random_state=123, reg_alpha=0.0005, ...), fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2023-11-09 20:01:30,750:INFO:Finalizing XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,
              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
              early_stopping_rounds=None, enable_categorical=False,
              eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
              importance_type=None, interaction_constraints='',
              learning_rate=0.5, max_bin=256, max_cat_to_onehot=4,
              max_delta_step=0, max_depth=1, max_leaves=0, min_child_weight=1,
              missing=nan, monotone_constraints='()', n_estimators=100,
              n_jobs=1, num_parallel_tree=1, objective='binary:logistic',
              predictor='auto', random_state=123, reg_alpha=0.0005, ...)
2023-11-09 20:01:30,752:INFO:Initializing create_model()
2023-11-09 20:01:30,752:INFO:create_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,
              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
              early_stopping_rounds=None, enable_categorical=False,
              eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
              importance_type=None, interaction_constraints='',
              learning_rate=0.5, max_bin=256, max_cat_to_onehot=4,
              max_delta_step=0, max_depth=1, max_leaves=0, min_child_weight=1,
              missing=nan, monotone_constraints='()', n_estimators=100,
              n_jobs=1, num_parallel_tree=1, objective='binary:logistic',
              predictor='auto', random_state=123, reg_alpha=0.0005, ...), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-11-09 20:01:30,752:INFO:Checking exceptions
2023-11-09 20:01:30,753:INFO:Importing libraries
2023-11-09 20:01:30,753:INFO:Copying training dataset
2023-11-09 20:01:30,771:INFO:Defining folds
2023-11-09 20:01:30,771:INFO:Declaring metric variables
2023-11-09 20:01:30,771:INFO:Importing untrained model
2023-11-09 20:01:30,772:INFO:Declaring custom model
2023-11-09 20:01:30,780:INFO:Extreme Gradient Boosting Imported succesfully
2023-11-09 20:01:30,780:INFO:Starting cross validation
2023-11-09 20:01:30,793:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 20:01:48,416:INFO:Calculating mean and std
2023-11-09 20:01:48,418:INFO:Creating metrics dataframe
2023-11-09 20:01:48,436:INFO:Finalizing model
2023-11-09 20:01:53,015:INFO:create_model_container: 18
2023-11-09 20:01:53,015:INFO:master_model_container: 18
2023-11-09 20:01:53,015:INFO:display_container: 7
2023-11-09 20:01:53,019:INFO:XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,
              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
              early_stopping_rounds=None, enable_categorical=False,
              eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
              importance_type=None, interaction_constraints='',
              learning_rate=0.5, max_bin=256, max_cat_to_onehot=4,
              max_delta_step=0, max_depth=1, max_leaves=0, min_child_weight=1,
              missing=nan, monotone_constraints='()', n_estimators=100,
              n_jobs=1, num_parallel_tree=1, objective='binary:logistic',
              predictor='auto', random_state=123, reg_alpha=0.0005, ...)
2023-11-09 20:01:53,019:INFO:create_model() succesfully completed......................................
2023-11-09 20:01:53,390:INFO:Creating Dashboard logs
2023-11-09 20:01:53,392:INFO:Model: Extreme Gradient Boosting
2023-11-09 20:01:53,432:INFO:logged params: {'objective': 'binary:logistic', 'use_label_encoder': False, 'base_score': 0.5, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'gamma': 0, 'gpu_id': -1, 'grow_policy': 'depthwise', 'importance_type': None, 'interaction_constraints': '', 'learning_rate': 0.5, 'max_bin': 256, 'max_cat_to_onehot': 4, 'max_delta_step': 0, 'max_depth': 1, 'max_leaves': 0, 'min_child_weight': 1, 'missing': nan, 'monotone_constraints': '()', 'n_estimators': 100, 'n_jobs': 1, 'num_parallel_tree': 1, 'predictor': 'auto', 'random_state': 123, 'reg_alpha': 0.0005, 'reg_lambda': 0.5, 'sampling_method': 'uniform', 'scale_pos_weight': 35.1, 'subsample': 1, 'tree_method': 'auto', 'validate_parameters': 1, 'verbosity': 0}
2023-11-09 20:01:53,519:INFO:Initializing predict_model()
2023-11-09 20:01:53,519:INFO:predict_model(estimator=XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,
              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
              early_stopping_rounds=None, enable_categorical=False,
              eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
              importance_type=None, interaction_constraints='',
              learning_rate=0.5, max_bin=256, max_cat_to_onehot=4,
              max_delta_step=0, max_depth=1, max_leaves=0, min_child_weight=1,
              missing=nan, monotone_constraints='()', n_estimators=100,
              n_jobs=1, num_parallel_tree=1, objective='binary:logistic',
              predictor='auto', random_state=123, reg_alpha=0.0005, ...), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-09 20:01:53,519:INFO:Checking exceptions
2023-11-09 20:01:53,519:INFO:Preloading libraries
2023-11-09 20:01:56,140:INFO:create_model_container: 18
2023-11-09 20:01:56,143:INFO:master_model_container: 18
2023-11-09 20:01:56,143:INFO:display_container: 6
2023-11-09 20:01:56,188:INFO:XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,
              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
              early_stopping_rounds=None, enable_categorical=False,
              eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
              importance_type=None, interaction_constraints='',
              learning_rate=0.5, max_bin=256, max_cat_to_onehot=4,
              max_delta_step=0, max_depth=1, max_leaves=0, min_child_weight=1,
              missing=nan, monotone_constraints='()', n_estimators=100,
              n_jobs=1, num_parallel_tree=1, objective='binary:logistic',
              predictor='auto', random_state=123, reg_alpha=0.0005, ...)
2023-11-09 20:01:56,188:INFO:finalize_model() succesfully completed......................................
2023-11-09 20:02:21,574:INFO:Initializing save_model()
2023-11-09 20:02:21,574:INFO:save_model(model=XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,
              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
              early_stopping_rounds=None, enable_categorical=False,
              eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
              importance_type=None, interaction_constraints='',
              learning_rate=0.5, max_bin=256, max_cat_to_onehot=4,
              max_delta_step=0, max_depth=1, max_leaves=0, min_child_weight=1,
              missing=nan, monotone_constraints='()', n_estimators=100,
              n_jobs=1, num_parallel_tree=1, objective='binary:logistic',
              predictor='auto', random_state=123, reg_alpha=0.0005, ...), model_name=models/pycaret/xgb_model_single_tuned_finalized, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2023-11-09 20:02:21,574:INFO:Adding model into prep_pipe
2023-11-09 20:02:21,607:INFO:models/pycaret/xgb_model_single_tuned_finalized.pkl saved in current working directory
2023-11-09 20:02:21,646:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               objective='binary:logistic', predictor='auto',
                               random_state=123, reg_alpha=0.0005, ...)]],
         verbose=False)
2023-11-09 20:02:21,646:INFO:save_model() successfully completed......................................
2023-11-09 20:04:42,196:INFO:Initializing create_model()
2023-11-09 20:04:42,202:INFO:create_model(estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, verbose=True, system=True, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-11-09 20:04:42,202:INFO:Checking exceptions
2023-11-09 20:04:42,203:INFO:Preparing display monitor
2023-11-09 20:04:42,277:INFO:Importing libraries
2023-11-09 20:04:42,278:INFO:Copying training dataset
2023-11-09 20:04:42,285:INFO:Defining folds
2023-11-09 20:04:42,285:INFO:Declaring metric variables
2023-11-09 20:04:42,305:INFO:Importing untrained model
2023-11-09 20:04:42,324:INFO:Gradient Boosting Classifier Imported succesfully
2023-11-09 20:04:42,496:INFO:Starting cross validation
2023-11-09 20:04:42,501:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 20:04:54,714:INFO:Calculating mean and std
2023-11-09 20:04:54,716:INFO:Creating metrics dataframe
2023-11-09 20:04:54,739:INFO:Finalizing model
2023-11-09 20:04:57,119:INFO:Creating Dashboard logs
2023-11-09 20:04:57,134:INFO:Model: Gradient Boosting Classifier
2023-11-09 20:04:57,181:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'deviance', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-11-09 20:04:57,244:INFO:Initializing predict_model()
2023-11-09 20:04:57,245:INFO:predict_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-09 20:04:57,245:INFO:Checking exceptions
2023-11-09 20:04:57,245:INFO:Preloading libraries
2023-11-09 20:04:58,012:INFO:Uploading results into container
2023-11-09 20:04:58,013:INFO:Uploading model into container now
2023-11-09 20:04:58,053:INFO:create_model_container: 19
2023-11-09 20:04:58,053:INFO:master_model_container: 19
2023-11-09 20:04:58,053:INFO:display_container: 7
2023-11-09 20:04:58,054:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-09 20:04:58,054:INFO:create_model() succesfully completed......................................
2023-11-09 20:06:05,024:INFO:Initializing tune_model()
2023-11-09 20:06:05,025:INFO:tune_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=5, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=False, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, display=None, return_train_score=False, kwargs={})
2023-11-09 20:06:05,026:INFO:Checking exceptions
2023-11-09 20:06:05,029:INFO:Preparing display monitor
2023-11-09 20:06:05,079:INFO:Copying training dataset
2023-11-09 20:06:05,083:INFO:Checking base model
2023-11-09 20:06:05,084:INFO:Base model : Gradient Boosting Classifier
2023-11-09 20:06:05,105:INFO:Declaring metric variables
2023-11-09 20:06:05,132:INFO:Defining Hyperparameters
2023-11-09 20:06:05,444:INFO:Tuning with n_jobs=1
2023-11-09 20:06:05,445:INFO:Initializing RandomizedSearchCV
2023-11-09 20:06:56,987:INFO:best_params: {'actual_estimator__subsample': 0.35, 'actual_estimator__n_estimators': 140, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.05, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 7, 'actual_estimator__learning_rate': 0.01}
2023-11-09 20:06:56,988:INFO:Hyperparameter search completed
2023-11-09 20:06:56,988:INFO:SubProcess create_model() called ==================================
2023-11-09 20:06:56,989:INFO:Initializing create_model()
2023-11-09 20:06:56,989:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b0a66c748>, return_train_score=False, kwargs={'subsample': 0.35, 'n_estimators': 140, 'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.05, 'max_features': 'sqrt', 'max_depth': 7, 'learning_rate': 0.01})
2023-11-09 20:06:56,989:INFO:Checking exceptions
2023-11-09 20:06:56,989:INFO:Importing libraries
2023-11-09 20:06:56,990:INFO:Copying training dataset
2023-11-09 20:06:56,994:INFO:Defining folds
2023-11-09 20:06:56,995:INFO:Declaring metric variables
2023-11-09 20:06:57,016:INFO:Importing untrained model
2023-11-09 20:06:57,016:INFO:Declaring custom model
2023-11-09 20:06:57,063:INFO:Gradient Boosting Classifier Imported succesfully
2023-11-09 20:06:57,128:INFO:Starting cross validation
2023-11-09 20:06:57,130:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 20:07:03,027:INFO:Calculating mean and std
2023-11-09 20:07:03,028:INFO:Creating metrics dataframe
2023-11-09 20:07:03,055:INFO:Finalizing model
2023-11-09 20:07:04,320:INFO:Uploading results into container
2023-11-09 20:07:04,320:INFO:Uploading model into container now
2023-11-09 20:07:04,320:INFO:create_model_container: 20
2023-11-09 20:07:04,320:INFO:master_model_container: 20
2023-11-09 20:07:04,321:INFO:display_container: 8
2023-11-09 20:07:04,321:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='deviance', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_impurity_split=None,
                           min_samples_leaf=2, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=140,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-09 20:07:04,322:INFO:create_model() succesfully completed......................................
2023-11-09 20:07:04,441:INFO:SubProcess create_model() end ==================================
2023-11-09 20:07:04,442:INFO:Creating Dashboard logs
2023-11-09 20:07:04,456:INFO:Model: Gradient Boosting Classifier
2023-11-09 20:07:04,485:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.01, 'loss': 'deviance', 'max_depth': 7, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'min_impurity_decrease': 0.05, 'min_impurity_split': None, 'min_samples_leaf': 2, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 140, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 123, 'subsample': 0.35, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-11-09 20:07:04,545:INFO:Initializing predict_model()
2023-11-09 20:07:04,545:INFO:predict_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='deviance', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_impurity_split=None,
                           min_samples_leaf=2, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=140,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-09 20:07:04,546:INFO:Checking exceptions
2023-11-09 20:07:04,546:INFO:Preloading libraries
2023-11-09 20:07:05,541:INFO:create_model_container: 20
2023-11-09 20:07:05,542:INFO:master_model_container: 20
2023-11-09 20:07:05,542:INFO:display_container: 8
2023-11-09 20:07:05,544:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='deviance', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_impurity_split=None,
                           min_samples_leaf=2, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=140,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-09 20:07:05,544:INFO:tune_model() succesfully completed......................................
2023-11-09 20:09:01,020:INFO:Initializing finalize_model()
2023-11-09 20:09:01,022:INFO:finalize_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='deviance', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_impurity_split=None,
                           min_samples_leaf=2, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=140,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2023-11-09 20:09:01,025:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='deviance', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_impurity_split=None,
                           min_samples_leaf=2, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=140,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-09 20:09:01,027:INFO:Initializing create_model()
2023-11-09 20:09:01,027:INFO:create_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='deviance', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_impurity_split=None,
                           min_samples_leaf=2, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=140,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-11-09 20:09:01,027:INFO:Checking exceptions
2023-11-09 20:09:01,027:INFO:Importing libraries
2023-11-09 20:09:01,027:INFO:Copying training dataset
2023-11-09 20:09:01,057:INFO:Defining folds
2023-11-09 20:09:01,057:INFO:Declaring metric variables
2023-11-09 20:09:01,057:INFO:Importing untrained model
2023-11-09 20:09:01,057:INFO:Declaring custom model
2023-11-09 20:09:01,058:INFO:Gradient Boosting Classifier Imported succesfully
2023-11-09 20:09:01,058:INFO:Starting cross validation
2023-11-09 20:09:01,060:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-09 20:09:09,908:INFO:Calculating mean and std
2023-11-09 20:09:09,909:INFO:Creating metrics dataframe
2023-11-09 20:09:09,912:INFO:Finalizing model
2023-11-09 20:09:14,201:INFO:create_model_container: 20
2023-11-09 20:09:14,202:INFO:master_model_container: 20
2023-11-09 20:09:14,203:INFO:display_container: 9
2023-11-09 20:09:14,208:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='deviance', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_impurity_split=None,
                           min_samples_leaf=2, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=140,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-09 20:09:14,208:INFO:create_model() succesfully completed......................................
2023-11-09 20:09:14,716:INFO:Creating Dashboard logs
2023-11-09 20:09:14,717:INFO:Model: Gradient Boosting Classifier
2023-11-09 20:09:14,737:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.01, 'loss': 'deviance', 'max_depth': 7, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'min_impurity_decrease': 0.05, 'min_impurity_split': None, 'min_samples_leaf': 2, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 140, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 123, 'subsample': 0.35, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-11-09 20:09:14,775:INFO:Initializing predict_model()
2023-11-09 20:09:14,775:INFO:predict_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='deviance', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_impurity_split=None,
                           min_samples_leaf=2, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=140,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-09 20:09:14,775:INFO:Checking exceptions
2023-11-09 20:09:14,775:INFO:Preloading libraries
2023-11-09 20:09:15,688:INFO:create_model_container: 20
2023-11-09 20:09:15,688:INFO:master_model_container: 20
2023-11-09 20:09:15,688:INFO:display_container: 8
2023-11-09 20:09:15,691:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='deviance', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_impurity_split=None,
                           min_samples_leaf=2, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=140,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-09 20:09:15,691:INFO:finalize_model() succesfully completed......................................
2023-11-09 20:09:49,506:INFO:Initializing save_model()
2023-11-09 20:09:49,507:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='deviance', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_impurity_split=None,
                           min_samples_leaf=2, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=140,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=models/pycaret/gbc_model_single_tuned_finalized, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2023-11-09 20:09:49,508:INFO:Adding model into prep_pipe
2023-11-09 20:09:49,555:INFO:models/pycaret/gbc_model_single_tuned_finalized.pkl saved in current working directory
2023-11-09 20:09:49,564:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                                            learning_rate=0.01, loss='deviance',
                                            max_depth=7, max_features='sqrt',
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.05,
                                            min_impurity_split=None,
                                            min_samples_leaf=2,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=140,
                                            n_iter_no_change=None,
                                            presort='deprecated',
                                            random_state=123, subsample=0.35,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False)]],
         verbose=False)
2023-11-09 20:09:49,564:INFO:save_model() successfully completed......................................
2023-11-09 20:12:29,204:INFO:Initializing interpret_model()
2023-11-09 20:12:29,206:INFO:interpret_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False)
2023-11-09 20:12:29,206:INFO:Checking exceptions
2023-11-09 20:12:29,742:INFO:plot type: summary
2023-11-09 20:12:29,742:INFO:Creating TreeExplainer
2023-11-09 20:12:30,217:INFO:Compiling shap values
2023-11-09 20:12:33,773:INFO:Visual Rendered Successfully
2023-11-09 20:12:33,774:INFO:interpret_model() succesfully completed......................................
2023-11-09 22:43:08,012:INFO:Initializing interpret_model()
2023-11-09 22:43:08,014:INFO:interpret_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, use_train_data=False, X_new_sample=None, y_new_sample=None, feature=member_rating, kwargs={}, observation=None, plot=correlation, save=False)
2023-11-09 22:43:08,014:INFO:Checking exceptions
2023-11-09 22:43:08,018:INFO:plot type: correlation
2023-11-09 22:43:08,019:WARNING:feature value passed. Feature used for correlation plot: member_rating
2023-11-09 22:43:08,019:INFO:Creating TreeExplainer
2023-11-09 22:43:09,831:INFO:Compiling shap values
2023-11-09 22:43:11,417:INFO:model type detected: type 2
2023-11-09 22:43:12,827:INFO:Visual Rendered Successfully
2023-11-09 22:43:12,828:INFO:interpret_model() succesfully completed......................................
2023-11-09 22:44:06,346:INFO:Initializing interpret_model()
2023-11-09 22:44:06,348:INFO:interpret_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, use_train_data=False, X_new_sample=None, y_new_sample=None, feature=member_rating, kwargs={'ice': True}, observation=None, plot=pdp, save=False)
2023-11-09 22:44:06,348:INFO:Checking exceptions
2023-11-09 22:44:06,468:INFO:plot type: pdp
2023-11-09 22:44:06,468:INFO:Checking feature parameter passed
2023-11-09 22:44:06,468:INFO:feature value passed. Feature used for correlation plot: member_rating
2023-11-09 22:44:31,037:INFO:Initializing interpret_model()
2023-11-09 22:44:31,039:INFO:interpret_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, use_train_data=False, X_new_sample=None, y_new_sample=None, feature=member_rating, kwargs={'ice': True}, observation=None, plot=pdp, save=False)
2023-11-09 22:44:31,039:INFO:Checking exceptions
2023-11-09 22:44:31,040:INFO:plot type: pdp
2023-11-09 22:44:31,040:INFO:Checking feature parameter passed
2023-11-09 22:44:31,040:INFO:feature value passed. Feature used for correlation plot: member_rating
2023-11-09 22:45:18,229:INFO:Initializing interpret_model()
2023-11-09 22:45:18,234:INFO:interpret_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, use_train_data=False, X_new_sample=None, y_new_sample=None, feature=optin_days, kwargs={}, observation=None, plot=correlation, save=False)
2023-11-09 22:45:18,237:INFO:Checking exceptions
2023-11-09 22:45:18,237:INFO:plot type: correlation
2023-11-09 22:45:18,238:WARNING:feature value passed. Feature used for correlation plot: optin_days
2023-11-09 22:45:18,238:INFO:Creating TreeExplainer
2023-11-09 22:45:18,631:INFO:Compiling shap values
2023-11-09 22:45:20,605:INFO:model type detected: type 2
2023-11-09 22:45:21,802:INFO:Visual Rendered Successfully
2023-11-09 22:45:21,803:INFO:interpret_model() succesfully completed......................................
2023-11-09 22:47:10,550:INFO:Initializing interpret_model()
2023-11-09 22:47:10,551:INFO:interpret_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, use_train_data=False, X_new_sample=   mailchimp_id     user_full_name                   user_email  \
0             3  Garrick Langworth  garrick.langworth@gmail.com   

   member_rating optin_time country_code  tag_count  made_purchase  \
0              2 2019-05-22           IN          6              1   

   optin_days email_provider  ...  tag_learning_lab_43  tag_learning_lab_44  \
0        -589      gmail.com  ...                  0.0                  0.0   

   tag_learning_lab_45  tag_learning_lab_46  tag_learning_lab_47  \
0                  0.0                  0.0                  0.0   

   tag_time_series_webinar  tag_webinar  tag_webinar_01  \
0                      0.0          1.0             0.0   

   tag_webinar_no_degree  tag_webinar_no_degree_02  
0                    0.0                       0.0  

[1 rows x 57 columns], y_new_sample=None, feature=None, kwargs={}, observation=None, plot=reason, save=False)
2023-11-09 22:47:10,552:INFO:Checking exceptions
2023-11-09 22:47:10,942:INFO:plot type: reason
2023-11-09 22:47:10,942:INFO:model type detected: type 2
2023-11-09 22:47:10,942:INFO:Creating TreeExplainer
2023-11-09 22:47:11,875:INFO:Compiling shap values
2023-11-09 22:47:11,936:WARNING:Observation set to None. Model agnostic plot will be rendered.
2023-11-09 22:47:11,943:INFO:Visual Rendered Successfully
2023-11-09 22:47:11,944:INFO:interpret_model() succesfully completed......................................
2023-11-09 22:52:02,340:INFO:Initializing interpret_model()
2023-11-09 22:52:02,341:INFO:interpret_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, use_train_data=False, X_new_sample=    mailchimp_id user_full_name              user_email  member_rating  \
11            25   Cornell Funk  cornell.funk@gmail.com              2   

   optin_time country_code  tag_count  made_purchase  optin_days  \
11 2020-06-30           IN          2              0        -184   

   email_provider  ...  tag_learning_lab_43  tag_learning_lab_44  \
11      gmail.com  ...                  0.0                  0.0   

    tag_learning_lab_45  tag_learning_lab_46  tag_learning_lab_47  \
11                  0.0                  0.0                  0.0   

    tag_time_series_webinar  tag_webinar  tag_webinar_01  \
11                      0.0          0.0             0.0   

    tag_webinar_no_degree  tag_webinar_no_degree_02  
11                    0.0                       0.0  

[1 rows x 57 columns], y_new_sample=None, feature=None, kwargs={}, observation=None, plot=reason, save=False)
2023-11-09 22:52:02,342:INFO:Checking exceptions
2023-11-09 22:52:02,535:INFO:plot type: reason
2023-11-09 22:52:02,535:INFO:model type detected: type 2
2023-11-09 22:52:02,535:INFO:Creating TreeExplainer
2023-11-09 22:52:03,945:INFO:Compiling shap values
2023-11-09 22:52:04,012:WARNING:Observation set to None. Model agnostic plot will be rendered.
2023-11-09 22:52:04,017:INFO:Visual Rendered Successfully
2023-11-09 22:52:04,018:INFO:interpret_model() succesfully completed......................................
2023-11-10 05:43:58,772:INFO:Initializing blend_models()
2023-11-10 05:43:58,775:INFO:blend_models(estimator_list=[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='deviance', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_impurity_split=None,
                           min_samples_leaf=1, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=100,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), <catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)], fold=None, round=4, choose_better=False, optimize=AUC, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, display=None, return_train_score=False)
2023-11-10 05:43:58,775:INFO:Checking exceptions
2023-11-10 05:43:58,791:INFO:Preparing display monitor
2023-11-10 05:43:59,111:INFO:Importing libraries
2023-11-10 05:43:59,114:INFO:Copying training dataset
2023-11-10 05:43:59,204:INFO:Getting model names
2023-11-10 05:43:59,281:INFO:SubProcess create_model() called ==================================
2023-11-10 05:43:59,299:INFO:Initializing create_model()
2023-11-10 05:43:59,299:INFO:create_model(estimator=VotingClassifier(estimators=[('gbc',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='deviance',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_impurity_split=None,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=No...
                                                         random_state=123,
                                                         subsample=1.0,
                                                         tol=0.0001,
                                                         validation_fraction=0.1,
                                                         verbose=0,
                                                         warm_start=False)),
                             ('catboost',
                              <catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>),
                             ('ada',
                              AdaBoostClassifier(algorithm='SAMME.R',
                                                 base_estimator=None,
                                                 learning_rate=1.0,
                                                 n_estimators=50,
                                                 random_state=123))],
                 flatten_transform=True, n_jobs=1, verbose=False, voting='soft',
                 weights=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b0af039b0>, return_train_score=False, kwargs={})
2023-11-10 05:43:59,299:INFO:Checking exceptions
2023-11-10 05:43:59,299:INFO:Importing libraries
2023-11-10 05:43:59,299:INFO:Copying training dataset
2023-11-10 05:43:59,311:INFO:Defining folds
2023-11-10 05:43:59,312:INFO:Declaring metric variables
2023-11-10 05:43:59,357:INFO:Importing untrained model
2023-11-10 05:43:59,357:INFO:Declaring custom model
2023-11-10 05:43:59,633:INFO:Voting Classifier Imported succesfully
2023-11-10 05:43:59,707:INFO:Starting cross validation
2023-11-10 05:43:59,712:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-10 05:45:17,645:INFO:Calculating mean and std
2023-11-10 05:45:17,647:INFO:Creating metrics dataframe
2023-11-10 05:45:17,689:INFO:Finalizing model
2023-11-10 05:45:59,248:INFO:Uploading results into container
2023-11-10 05:45:59,254:INFO:Uploading model into container now
2023-11-10 05:45:59,254:INFO:create_model_container: 21
2023-11-10 05:45:59,254:INFO:master_model_container: 21
2023-11-10 05:45:59,254:INFO:display_container: 9
2023-11-10 05:45:59,260:INFO:VotingClassifier(estimators=[('gbc',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='deviance',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_impurity_split=None,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=No...
                                                         random_state=123,
                                                         subsample=1.0,
                                                         tol=0.0001,
                                                         validation_fraction=0.1,
                                                         verbose=0,
                                                         warm_start=False)),
                             ('catboost',
                              <catboost.core.CatBoostClassifier object at 0x7f7b0b745d30>),
                             ('ada',
                              AdaBoostClassifier(algorithm='SAMME.R',
                                                 base_estimator=None,
                                                 learning_rate=1.0,
                                                 n_estimators=50,
                                                 random_state=123))],
                 flatten_transform=True, n_jobs=1, verbose=False, voting='soft',
                 weights=None)
2023-11-10 05:45:59,260:INFO:create_model() succesfully completed......................................
2023-11-10 05:46:00,823:INFO:SubProcess create_model() end ==================================
2023-11-10 05:46:00,827:INFO:Creating Dashboard logs
2023-11-10 05:46:00,864:INFO:Model: Voting Classifier
2023-11-10 05:46:00,961:INFO:logged params: {'flatten_transform': True, 'n_jobs': 1, 'verbose': False, 'voting': 'soft', 'weights': None, 'catboost': <catboost.core.CatBoostClassifier object at 0x7f7b0b745d30>, 'ada': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), 'gbc__ccp_alpha': 0.0, 'gbc__criterion': 'friedman_mse', 'gbc__init': None, 'gbc__learning_rate': 0.1, 'gbc__loss': 'deviance', 'gbc__max_depth': 3, 'gbc__max_features': None, 'gbc__max_leaf_nodes': None, 'gbc__min_impurity_decrease': 0.0, 'gbc__min_impurity_split': None, 'gbc__min_samples_leaf': 1, 'gbc__min_samples_split': 2, 'gbc__min_weight_fraction_leaf': 0.0, 'gbc__n_estimators': 100, 'gbc__n_iter_no_change': None, 'gbc__presort': 'deprecated', 'gbc__random_state': 123, 'gbc__subsample': 1.0, 'gbc__tol': 0.0001, 'gbc__validation_fraction': 0.1, 'gbc__verbose': 0, 'gbc__warm_start': False, 'catboost__border_count': 254, 'catboost__thread_count': 1, 'catboost__verbose': False, 'catboost__task_type': 'CPU', 'catboost__random_state': 123, 'ada__algorithm': 'SAMME.R', 'ada__base_estimator': None, 'ada__learning_rate': 1.0, 'ada__n_estimators': 50, 'ada__random_state': 123}
2023-11-10 05:46:01,079:INFO:Initializing predict_model()
2023-11-10 05:46:01,080:INFO:predict_model(estimator=VotingClassifier(estimators=[('gbc',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='deviance',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_impurity_split=None,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=No...
                                                         random_state=123,
                                                         subsample=1.0,
                                                         tol=0.0001,
                                                         validation_fraction=0.1,
                                                         verbose=0,
                                                         warm_start=False)),
                             ('catboost',
                              <catboost.core.CatBoostClassifier object at 0x7f7b0b745d30>),
                             ('ada',
                              AdaBoostClassifier(algorithm='SAMME.R',
                                                 base_estimator=None,
                                                 learning_rate=1.0,
                                                 n_estimators=50,
                                                 random_state=123))],
                 flatten_transform=True, n_jobs=1, verbose=False, voting='soft',
                 weights=None), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-10 05:46:01,080:INFO:Checking exceptions
2023-11-10 05:46:01,080:INFO:Preloading libraries
2023-11-10 05:46:03,136:INFO:create_model_container: 21
2023-11-10 05:46:03,139:INFO:master_model_container: 21
2023-11-10 05:46:03,146:INFO:display_container: 9
2023-11-10 05:46:03,165:INFO:VotingClassifier(estimators=[('gbc',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='deviance',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_impurity_split=None,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=No...
                                                         random_state=123,
                                                         subsample=1.0,
                                                         tol=0.0001,
                                                         validation_fraction=0.1,
                                                         verbose=0,
                                                         warm_start=False)),
                             ('catboost',
                              <catboost.core.CatBoostClassifier object at 0x7f7b0b745d30>),
                             ('ada',
                              AdaBoostClassifier(algorithm='SAMME.R',
                                                 base_estimator=None,
                                                 learning_rate=1.0,
                                                 n_estimators=50,
                                                 random_state=123))],
                 flatten_transform=True, n_jobs=1, verbose=False, voting='soft',
                 weights=None)
2023-11-10 05:46:03,165:INFO:blend_models() succesfully completed......................................
2023-11-10 05:47:38,190:INFO:Initializing blend_models()
2023-11-10 05:47:38,191:INFO:blend_models(estimator_list=[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.01, loss='deviance', max_depth=7,
                           max_features='sqrt', max_leaf_nodes=None,
                           min_impurity_decrease=0.05, min_impurity_split=None,
                           min_samples_leaf=2, min_samples_split=2,
                           min_weight_fraction_leaf=0.0, n_estimators=140,
                           n_iter_no_change=None, presort='deprecated',
                           random_state=123, subsample=0.35, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), XGBClassifier(base_score=0.5, booster='gbtree', callbacks=None,
              colsample_bylevel=1, colsample_bynode=1, colsample_bytree=1,
              early_stopping_rounds=None, enable_categorical=False,
              eval_metric=None, gamma=0, gpu_id=-1, grow_policy='depthwise',
              importance_type=None, interaction_constraints='',
              learning_rate=0.5, max_bin=256, max_cat_to_onehot=4,
              max_delta_step=0, max_depth=1, max_leaves=0, min_child_weight=1,
              missing=nan, monotone_constraints='()', n_estimators=100,
              n_jobs=1, num_parallel_tree=1, objective='binary:logistic',
              predictor='auto', random_state=123, reg_alpha=0.0005, ...)], fold=None, round=4, choose_better=False, optimize=AUC, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, display=None, return_train_score=False)
2023-11-10 05:47:38,193:INFO:Checking exceptions
2023-11-10 05:47:38,205:INFO:Preparing display monitor
2023-11-10 05:47:38,249:INFO:Importing libraries
2023-11-10 05:47:38,250:INFO:Copying training dataset
2023-11-10 05:47:38,303:INFO:Getting model names
2023-11-10 05:47:38,326:INFO:SubProcess create_model() called ==================================
2023-11-10 05:47:38,403:INFO:Initializing create_model()
2023-11-10 05:47:38,403:INFO:create_model(estimator=VotingClassifier(estimators=[('gbc',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.01,
                                                         loss='deviance',
                                                         max_depth=7,
                                                         max_features='sqrt',
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.05,
                                                         min_impurity_split=None,
                                                         min_samples_leaf=2,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=140,
                                                         n_iter_no_chang...
                                            learning_rate=0.5, max_bin=256,
                                            max_cat_to_onehot=4,
                                            max_delta_step=0, max_depth=1,
                                            max_leaves=0, min_child_weight=1,
                                            missing=nan,
                                            monotone_constraints='()',
                                            n_estimators=100, n_jobs=1,
                                            num_parallel_tree=1,
                                            objective='binary:logistic',
                                            predictor='auto', random_state=123,
                                            reg_alpha=0.0005, ...))],
                 flatten_transform=True, n_jobs=1, verbose=False, voting='soft',
                 weights=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b0a55a7b8>, return_train_score=False, kwargs={})
2023-11-10 05:47:38,404:INFO:Checking exceptions
2023-11-10 05:47:38,405:INFO:Importing libraries
2023-11-10 05:47:38,405:INFO:Copying training dataset
2023-11-10 05:47:38,417:INFO:Defining folds
2023-11-10 05:47:38,417:INFO:Declaring metric variables
2023-11-10 05:47:38,438:INFO:Importing untrained model
2023-11-10 05:47:38,438:INFO:Declaring custom model
2023-11-10 05:47:38,471:INFO:Voting Classifier Imported succesfully
2023-11-10 05:47:38,574:INFO:Starting cross validation
2023-11-10 05:47:38,578:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-10 05:47:56,197:INFO:Calculating mean and std
2023-11-10 05:47:56,199:INFO:Creating metrics dataframe
2023-11-10 05:47:56,257:INFO:Finalizing model
2023-11-10 05:47:59,790:INFO:Uploading results into container
2023-11-10 05:47:59,790:INFO:Uploading model into container now
2023-11-10 05:47:59,790:INFO:create_model_container: 22
2023-11-10 05:47:59,790:INFO:master_model_container: 22
2023-11-10 05:47:59,791:INFO:display_container: 10
2023-11-10 05:47:59,803:INFO:VotingClassifier(estimators=[('gbc',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.01,
                                                         loss='deviance',
                                                         max_depth=7,
                                                         max_features='sqrt',
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.05,
                                                         min_impurity_split=None,
                                                         min_samples_leaf=2,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=140,
                                                         n_iter_no_chang...
                                            learning_rate=0.5, max_bin=256,
                                            max_cat_to_onehot=4,
                                            max_delta_step=0, max_depth=1,
                                            max_leaves=0, min_child_weight=1,
                                            missing=nan,
                                            monotone_constraints='()',
                                            n_estimators=100, n_jobs=1,
                                            num_parallel_tree=1,
                                            objective='binary:logistic',
                                            predictor='auto', random_state=123,
                                            reg_alpha=0.0005, ...))],
                 flatten_transform=True, n_jobs=1, verbose=False, voting='soft',
                 weights=None)
2023-11-10 05:47:59,803:INFO:create_model() succesfully completed......................................
2023-11-10 05:47:59,965:INFO:SubProcess create_model() end ==================================
2023-11-10 05:47:59,966:INFO:Creating Dashboard logs
2023-11-10 05:47:59,985:INFO:Model: Voting Classifier
2023-11-10 05:48:00,025:INFO:logged params: {'flatten_transform': True, 'n_jobs': 1, 'verbose': False, 'voting': 'soft', 'weights': None, 'gbc__ccp_alpha': 0.0, 'gbc__criterion': 'friedman_mse', 'gbc__init': None, 'gbc__learning_rate': 0.01, 'gbc__loss': 'deviance', 'gbc__max_depth': 7, 'gbc__max_features': 'sqrt', 'gbc__max_leaf_nodes': None, 'gbc__min_impurity_decrease': 0.05, 'gbc__min_impurity_split': None, 'gbc__min_samples_leaf': 2, 'gbc__min_samples_split': 2, 'gbc__min_weight_fraction_leaf': 0.0, 'gbc__n_estimators': 140, 'gbc__n_iter_no_change': None, 'gbc__presort': 'deprecated', 'gbc__random_state': 123, 'gbc__subsample': 0.35, 'gbc__tol': 0.0001, 'gbc__validation_fraction': 0.1, 'gbc__verbose': 0, 'gbc__warm_start': False, 'xgboost__objective': 'binary:logistic', 'xgboost__use_label_encoder': False, 'xgboost__base_score': 0.5, 'xgboost__booster': 'gbtree', 'xgboost__callbacks': None, 'xgboost__colsample_bylevel': 1, 'xgboost__colsample_bynode': 1, 'xgboost__colsample_bytree': 1, 'xgboost__early_stopping_rounds': None, 'xgboost__enable_categorical': False, 'xgboost__eval_metric': None, 'xgboost__gamma': 0, 'xgboost__gpu_id': -1, 'xgboost__grow_policy': 'depthwise', 'xgboost__importance_type': None, 'xgboost__interaction_constraints': '', 'xgboost__learning_rate': 0.5, 'xgboost__max_bin': 256, 'xgboost__max_cat_to_onehot': 4, 'xgboost__max_delta_step': 0, 'xgboost__max_depth': 1, 'xgboost__max_leaves': 0, 'xgboost__min_child_weight': 1, 'xgboost__missing': nan, 'xgboost__monotone_constraints': '()', 'xgboost__n_estimators': 100, 'xgboost__n_jobs': 1, 'xgboost__num_parallel_tree': 1, 'xgboost__predictor': 'auto', 'xgboost__random_state': 123, 'xgboost__reg_alpha': 0.0005, 'xgboost__reg_lambda': 0.5, 'xgboost__sampling_method': 'uniform', 'xgboost__scale_pos_weight': 35.1, 'xgboost__subsample': 1, 'xgboost__tree_method': 'auto', 'xgboost__validate_parameters': 1, 'xgboost__verbosity': 0}
2023-11-10 05:48:00,118:INFO:Initializing predict_model()
2023-11-10 05:48:00,118:INFO:predict_model(estimator=VotingClassifier(estimators=[('gbc',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.01,
                                                         loss='deviance',
                                                         max_depth=7,
                                                         max_features='sqrt',
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.05,
                                                         min_impurity_split=None,
                                                         min_samples_leaf=2,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=140,
                                                         n_iter_no_chang...
                                            learning_rate=0.5, max_bin=256,
                                            max_cat_to_onehot=4,
                                            max_delta_step=0, max_depth=1,
                                            max_leaves=0, min_child_weight=1,
                                            missing=nan,
                                            monotone_constraints='()',
                                            n_estimators=100, n_jobs=1,
                                            num_parallel_tree=1,
                                            objective='binary:logistic',
                                            predictor='auto', random_state=123,
                                            reg_alpha=0.0005, ...))],
                 flatten_transform=True, n_jobs=1, verbose=False, voting='soft',
                 weights=None), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-10 05:48:00,118:INFO:Checking exceptions
2023-11-10 05:48:00,118:INFO:Preloading libraries
2023-11-10 05:48:00,967:INFO:create_model_container: 22
2023-11-10 05:48:00,967:INFO:master_model_container: 22
2023-11-10 05:48:00,967:INFO:display_container: 10
2023-11-10 05:48:00,989:INFO:VotingClassifier(estimators=[('gbc',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.01,
                                                         loss='deviance',
                                                         max_depth=7,
                                                         max_features='sqrt',
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.05,
                                                         min_impurity_split=None,
                                                         min_samples_leaf=2,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=140,
                                                         n_iter_no_chang...
                                            learning_rate=0.5, max_bin=256,
                                            max_cat_to_onehot=4,
                                            max_delta_step=0, max_depth=1,
                                            max_leaves=0, min_child_weight=1,
                                            missing=nan,
                                            monotone_constraints='()',
                                            n_estimators=100, n_jobs=1,
                                            num_parallel_tree=1,
                                            objective='binary:logistic',
                                            predictor='auto', random_state=123,
                                            reg_alpha=0.0005, ...))],
                 flatten_transform=True, n_jobs=1, verbose=False, voting='soft',
                 weights=None)
2023-11-10 05:48:00,990:INFO:blend_models() succesfully completed......................................
2023-11-10 05:50:48,467:INFO:Initializing calibrate_model()
2023-11-10 05:50:48,468:INFO:calibrate_model(estimator=VotingClassifier(estimators=[('gbc',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='deviance',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_impurity_split=None,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=No...
                                                         random_state=123,
                                                         subsample=1.0,
                                                         tol=0.0001,
                                                         validation_fraction=0.1,
                                                         verbose=0,
                                                         warm_start=False)),
                             ('catboost',
                              <catboost.core.CatBoostClassifier object at 0x7f7b0b745d30>),
                             ('ada',
                              AdaBoostClassifier(algorithm='SAMME.R',
                                                 base_estimator=None,
                                                 learning_rate=1.0,
                                                 n_estimators=50,
                                                 random_state=123))],
                 flatten_transform=True, n_jobs=1, verbose=False, voting='soft',
                 weights=None), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, display=None, return_train_score=False)
2023-11-10 05:50:48,469:INFO:Checking exceptions
2023-11-10 05:50:48,469:INFO:Preloading libraries
2023-11-10 05:50:48,469:INFO:Preparing display monitor
2023-11-10 05:50:48,469:INFO:Preparing display monitor
2023-11-10 05:50:48,569:INFO:Getting model name
2023-11-10 05:50:48,570:INFO:Base model : Voting Classifier
2023-11-10 05:50:48,631:INFO:Importing untrained CalibratedClassifierCV
2023-11-10 05:50:48,633:INFO:SubProcess create_model() called ==================================
2023-11-10 05:50:48,654:INFO:Initializing create_model()
2023-11-10 05:50:48,655:INFO:create_model(estimator=CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.1,
                                                                                               loss='deviance',
                                                                                               max_depth=3,
                                                                                               max_features=None,
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.0,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=1,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_leaf=0....
                                                                                               tol=0.0001,
                                                                                               validation_fraction=0.1,
                                                                                               verbose=0,
                                                                                               warm_start=False)),
                                                                   ('catboost',
                                                                    <catboost.core.CatBoostClassifier object at 0x7f7b0b745d30>),
                                                                   ('ada',
                                                                    AdaBoostClassifier(algorithm='SAMME.R',
                                                                                       base_estimator=None,
                                                                                       learning_rate=1.0,
                                                                                       n_estimators=50,
                                                                                       random_state=123))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b0b95e278>, return_train_score=False, kwargs={})
2023-11-10 05:50:48,655:INFO:Checking exceptions
2023-11-10 05:50:48,655:INFO:Importing libraries
2023-11-10 05:50:48,655:INFO:Copying training dataset
2023-11-10 05:50:48,673:INFO:Defining folds
2023-11-10 05:50:48,674:INFO:Declaring metric variables
2023-11-10 05:50:48,700:INFO:Importing untrained model
2023-11-10 05:50:48,700:INFO:Declaring custom model
2023-11-10 05:50:48,728:INFO:Voting Classifier Imported succesfully
2023-11-10 05:50:49,079:INFO:Starting cross validation
2023-11-10 05:50:49,080:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-10 05:55:53,258:INFO:Calculating mean and std
2023-11-10 05:55:53,265:INFO:Creating metrics dataframe
2023-11-10 05:55:53,331:INFO:Finalizing model
2023-11-10 05:57:01,241:INFO:Uploading results into container
2023-11-10 05:57:01,243:INFO:Uploading model into container now
2023-11-10 05:57:01,243:INFO:create_model_container: 23
2023-11-10 05:57:01,243:INFO:master_model_container: 23
2023-11-10 05:57:01,243:INFO:display_container: 11
2023-11-10 05:57:01,255:INFO:CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.1,
                                                                                               loss='deviance',
                                                                                               max_depth=3,
                                                                                               max_features=None,
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.0,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=1,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_leaf=0....
                                                                                               tol=0.0001,
                                                                                               validation_fraction=0.1,
                                                                                               verbose=0,
                                                                                               warm_start=False)),
                                                                   ('catboost',
                                                                    <catboost.core.CatBoostClassifier object at 0x7f7b0a56ea90>),
                                                                   ('ada',
                                                                    AdaBoostClassifier(algorithm='SAMME.R',
                                                                                       base_estimator=None,
                                                                                       learning_rate=1.0,
                                                                                       n_estimators=50,
                                                                                       random_state=123))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid')
2023-11-10 05:57:01,255:INFO:create_model() succesfully completed......................................
2023-11-10 05:57:01,878:INFO:SubProcess create_model() end ==================================
2023-11-10 05:57:01,882:INFO:Creating Dashboard logs
2023-11-10 05:57:01,908:INFO:Model: Voting Classifier
2023-11-10 05:57:01,960:INFO:logged params: {'base_estimator__flatten_transform': True, 'base_estimator__n_jobs': 1, 'base_estimator__verbose': False, 'base_estimator__voting': 'soft', 'base_estimator__weights': None, 'base_estimator__catboost': <catboost.core.CatBoostClassifier object at 0x7f7b0a56ea90>, 'base_estimator__ada': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), 'base_estimator__gbc__ccp_alpha': 0.0, 'base_estimator__gbc__criterion': 'friedman_mse', 'base_estimator__gbc__init': None, 'base_estimator__gbc__learning_rate': 0.1, 'base_estimator__gbc__loss': 'deviance', 'base_estimator__gbc__max_depth': 3, 'base_estimator__gbc__max_features': None, 'base_estimator__gbc__max_leaf_nodes': None, 'base_estimator__gbc__min_impurity_decrease': 0.0, 'base_estimator__gbc__min_impurity_split': None, 'base_estimator__gbc__min_samples_leaf': 1, 'base_estimator__gbc__min_samples_split': 2, 'base_estimator__gbc__min_weight_fraction_leaf': 0.0, 'base_estimator__gbc__n_estimators': 100, 'base_estimator__gbc__n_iter_no_change': None, 'base_estimator__gbc__presort': 'deprecated', 'base_estimator__gbc__random_state': 123, 'base_estimator__gbc__subsample': 1.0, 'base_estimator__gbc__tol': 0.0001, 'base_estimator__gbc__validation_fraction': 0.1, 'base_estimator__gbc__verbose': 0, 'base_estimator__gbc__warm_start': False, 'base_estimator__catboost__border_count': 254, 'base_estimator__catboost__thread_count': 1, 'base_estimator__catboost__verbose': False, 'base_estimator__catboost__task_type': 'CPU', 'base_estimator__catboost__random_state': 123, 'base_estimator__ada__algorithm': 'SAMME.R', 'base_estimator__ada__base_estimator': None, 'base_estimator__ada__learning_rate': 1.0, 'base_estimator__ada__n_estimators': 50, 'base_estimator__ada__random_state': 123, 'cv': 5, 'method': 'sigmoid'}
2023-11-10 05:57:02,392:INFO:Initializing predict_model()
2023-11-10 05:57:02,393:INFO:predict_model(estimator=CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.1,
                                                                                               loss='deviance',
                                                                                               max_depth=3,
                                                                                               max_features=None,
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.0,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=1,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_leaf=0....
                                                                                               tol=0.0001,
                                                                                               validation_fraction=0.1,
                                                                                               verbose=0,
                                                                                               warm_start=False)),
                                                                   ('catboost',
                                                                    <catboost.core.CatBoostClassifier object at 0x7f7b0a56ea90>),
                                                                   ('ada',
                                                                    AdaBoostClassifier(algorithm='SAMME.R',
                                                                                       base_estimator=None,
                                                                                       learning_rate=1.0,
                                                                                       n_estimators=50,
                                                                                       random_state=123))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid'), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-10 05:57:02,393:INFO:Checking exceptions
2023-11-10 05:57:02,393:INFO:Preloading libraries
2023-11-10 05:57:05,080:INFO:create_model_container: 23
2023-11-10 05:57:05,080:INFO:master_model_container: 23
2023-11-10 05:57:05,080:INFO:display_container: 11
2023-11-10 05:57:05,090:INFO:CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.1,
                                                                                               loss='deviance',
                                                                                               max_depth=3,
                                                                                               max_features=None,
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.0,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=1,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_leaf=0....
                                                                                               tol=0.0001,
                                                                                               validation_fraction=0.1,
                                                                                               verbose=0,
                                                                                               warm_start=False)),
                                                                   ('catboost',
                                                                    <catboost.core.CatBoostClassifier object at 0x7f7b0a56ea90>),
                                                                   ('ada',
                                                                    AdaBoostClassifier(algorithm='SAMME.R',
                                                                                       base_estimator=None,
                                                                                       learning_rate=1.0,
                                                                                       n_estimators=50,
                                                                                       random_state=123))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid')
2023-11-10 05:57:05,090:INFO:calibrate_model() succesfully completed......................................
2023-11-10 05:58:04,369:INFO:Initializing calibrate_model()
2023-11-10 05:58:04,371:INFO:calibrate_model(estimator=VotingClassifier(estimators=[('gbc',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.01,
                                                         loss='deviance',
                                                         max_depth=7,
                                                         max_features='sqrt',
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.05,
                                                         min_impurity_split=None,
                                                         min_samples_leaf=2,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=140,
                                                         n_iter_no_chang...
                                            learning_rate=0.5, max_bin=256,
                                            max_cat_to_onehot=4,
                                            max_delta_step=0, max_depth=1,
                                            max_leaves=0, min_child_weight=1,
                                            missing=nan,
                                            monotone_constraints='()',
                                            n_estimators=100, n_jobs=1,
                                            num_parallel_tree=1,
                                            objective='binary:logistic',
                                            predictor='auto', random_state=123,
                                            reg_alpha=0.0005, ...))],
                 flatten_transform=True, n_jobs=1, verbose=False, voting='soft',
                 weights=None), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, display=None, return_train_score=False)
2023-11-10 05:58:04,371:INFO:Checking exceptions
2023-11-10 05:58:04,371:INFO:Preloading libraries
2023-11-10 05:58:04,371:INFO:Preparing display monitor
2023-11-10 05:58:04,371:INFO:Preparing display monitor
2023-11-10 05:58:04,410:INFO:Getting model name
2023-11-10 05:58:04,412:INFO:Base model : Voting Classifier
2023-11-10 05:58:04,447:INFO:Importing untrained CalibratedClassifierCV
2023-11-10 05:58:04,448:INFO:SubProcess create_model() called ==================================
2023-11-10 05:58:04,481:INFO:Initializing create_model()
2023-11-10 05:58:04,481:INFO:create_model(estimator=CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.01,
                                                                                               loss='deviance',
                                                                                               max_depth=7,
                                                                                               max_features='sqrt',
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.05,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=2,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_lea...
                                                                                  max_bin=256,
                                                                                  max_cat_to_onehot=4,
                                                                                  max_delta_step=0,
                                                                                  max_depth=1,
                                                                                  max_leaves=0,
                                                                                  min_child_weight=1,
                                                                                  missing=nan,
                                                                                  monotone_constraints='()',
                                                                                  n_estimators=100,
                                                                                  n_jobs=1,
                                                                                  num_parallel_tree=1,
                                                                                  objective='binary:logistic',
                                                                                  predictor='auto',
                                                                                  random_state=123,
                                                                                  reg_alpha=0.0005, ...))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=True, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=True, probability_threshold=None, display=<pycaret.internal.Display.Display object at 0x7f7b0b959a20>, return_train_score=False, kwargs={})
2023-11-10 05:58:04,481:INFO:Checking exceptions
2023-11-10 05:58:04,482:INFO:Importing libraries
2023-11-10 05:58:04,485:INFO:Copying training dataset
2023-11-10 05:58:04,511:INFO:Defining folds
2023-11-10 05:58:04,513:INFO:Declaring metric variables
2023-11-10 05:58:04,579:INFO:Importing untrained model
2023-11-10 05:58:04,579:INFO:Declaring custom model
2023-11-10 05:58:04,609:INFO:Voting Classifier Imported succesfully
2023-11-10 05:58:04,665:INFO:Starting cross validation
2023-11-10 05:58:04,667:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-10 05:59:06,874:INFO:Calculating mean and std
2023-11-10 05:59:06,876:INFO:Creating metrics dataframe
2023-11-10 05:59:06,904:INFO:Finalizing model
2023-11-10 05:59:19,372:INFO:Uploading results into container
2023-11-10 05:59:19,374:INFO:Uploading model into container now
2023-11-10 05:59:19,374:INFO:create_model_container: 24
2023-11-10 05:59:19,374:INFO:master_model_container: 24
2023-11-10 05:59:19,375:INFO:display_container: 12
2023-11-10 05:59:19,397:INFO:CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.01,
                                                                                               loss='deviance',
                                                                                               max_depth=7,
                                                                                               max_features='sqrt',
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.05,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=2,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_lea...
                                                                                  max_bin=256,
                                                                                  max_cat_to_onehot=4,
                                                                                  max_delta_step=0,
                                                                                  max_depth=1,
                                                                                  max_leaves=0,
                                                                                  min_child_weight=1,
                                                                                  missing=nan,
                                                                                  monotone_constraints='()',
                                                                                  n_estimators=100,
                                                                                  n_jobs=1,
                                                                                  num_parallel_tree=1,
                                                                                  objective='binary:logistic',
                                                                                  predictor='auto',
                                                                                  random_state=123,
                                                                                  reg_alpha=0.0005, ...))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid')
2023-11-10 05:59:19,397:INFO:create_model() succesfully completed......................................
2023-11-10 05:59:19,543:INFO:SubProcess create_model() end ==================================
2023-11-10 05:59:19,548:INFO:Creating Dashboard logs
2023-11-10 05:59:19,570:INFO:Model: Voting Classifier
2023-11-10 05:59:19,621:INFO:logged params: {'base_estimator__flatten_transform': True, 'base_estimator__n_jobs': 1, 'base_estimator__verbose': False, 'base_estimator__voting': 'soft', 'base_estimator__weights': None, 'base_estimator__gbc__ccp_alpha': 0.0, 'base_estimator__gbc__criterion': 'friedman_mse', 'base_estimator__gbc__init': None, 'base_estimator__gbc__learning_rate': 0.01, 'base_estimator__gbc__loss': 'deviance', 'base_estimator__gbc__max_depth': 7, 'base_estimator__gbc__max_features': 'sqrt', 'base_estimator__gbc__max_leaf_nodes': None, 'base_estimator__gbc__min_impurity_decrease': 0.05, 'base_estimator__gbc__min_impurity_split': None, 'base_estimator__gbc__min_samples_leaf': 2, 'base_estimator__gbc__min_samples_split': 2, 'base_estimator__gbc__min_weight_fraction_leaf': 0.0, 'base_estimator__gbc__n_estimators': 140, 'base_estimator__gbc__n_iter_no_change': None, 'base_estimator__gbc__presort': 'deprecated', 'base_estimator__gbc__random_state': 123, 'base_estimator__gbc__subsample': 0.35, 'base_estimator__gbc__tol': 0.0001, 'base_estimator__gbc__validation_fraction': 0.1, 'base_estimator__gbc__verbose': 0, 'base_estimator__gbc__warm_start': False, 'base_estimator__xgboost__objective': 'binary:logistic', 'base_estimator__xgboost__use_label_encoder': False, 'base_estimator__xgboost__base_score': 0.5, 'base_estimator__xgboost__booster': 'gbtree', 'base_estimator__xgboost__callbacks': None, 'base_estimator__xgboost__colsample_bylevel': 1, 'base_estimator__xgboost__colsample_bynode': 1, 'base_estimator__xgboost__colsample_bytree': 1, 'base_estimator__xgboost__early_stopping_rounds': None, 'base_estimator__xgboost__enable_categorical': False, 'base_estimator__xgboost__eval_metric': None, 'base_estimator__xgboost__gamma': 0, 'base_estimator__xgboost__gpu_id': -1, 'base_estimator__xgboost__grow_policy': 'depthwise', 'base_estimator__xgboost__importance_type': None, 'base_estimator__xgboost__interaction_constraints': '', 'base_estimator__xgboost__learning_rate': 0.5, 'base_estimator__xgboost__max_bin': 256, 'base_estimator__xgboost__max_cat_to_onehot': 4, 'base_estimator__xgboost__max_delta_step': 0, 'base_estimator__xgboost__max_depth': 1, 'base_estimator__xgboost__max_leaves': 0, 'base_estimator__xgboost__min_child_weight': 1, 'base_estimator__xgboost__missing': nan, 'base_estimator__xgboost__monotone_constraints': '()', 'base_estimator__xgboost__n_estimators': 100, 'base_estimator__xgboost__n_jobs': 1, 'base_estimator__xgboost__num_parallel_tree': 1, 'base_estimator__xgboost__predictor': 'auto', 'base_estimator__xgboost__random_state': 123, 'base_estimator__xgboost__reg_alpha': 0.0005, 'base_estimator__xgboost__reg_lambda': 0.5, 'base_estimator__xgboost__sampling_method': 'uniform', 'base_estimator__xgboost__scale_pos_weight': 35.1, 'base_estimator__xgboost__subsample': 1, 'base_estimator__xgboost__tree_method': 'auto', 'base_estimator__xgboost__validate_parameters': 1, 'base_estimator__xgboost__verbosity': 0, 'cv': 5, 'method': 'sigmoid'}
2023-11-10 05:59:19,700:INFO:Initializing predict_model()
2023-11-10 05:59:19,700:INFO:predict_model(estimator=CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.01,
                                                                                               loss='deviance',
                                                                                               max_depth=7,
                                                                                               max_features='sqrt',
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.05,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=2,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_lea...
                                                                                  max_bin=256,
                                                                                  max_cat_to_onehot=4,
                                                                                  max_delta_step=0,
                                                                                  max_depth=1,
                                                                                  max_leaves=0,
                                                                                  min_child_weight=1,
                                                                                  missing=nan,
                                                                                  monotone_constraints='()',
                                                                                  n_estimators=100,
                                                                                  n_jobs=1,
                                                                                  num_parallel_tree=1,
                                                                                  objective='binary:logistic',
                                                                                  predictor='auto',
                                                                                  random_state=123,
                                                                                  reg_alpha=0.0005, ...))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid'), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-10 05:59:19,700:INFO:Checking exceptions
2023-11-10 05:59:19,700:INFO:Preloading libraries
2023-11-10 05:59:21,374:INFO:create_model_container: 24
2023-11-10 05:59:21,374:INFO:master_model_container: 24
2023-11-10 05:59:21,374:INFO:display_container: 12
2023-11-10 05:59:21,394:INFO:CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.01,
                                                                                               loss='deviance',
                                                                                               max_depth=7,
                                                                                               max_features='sqrt',
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.05,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=2,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_lea...
                                                                                  max_bin=256,
                                                                                  max_cat_to_onehot=4,
                                                                                  max_delta_step=0,
                                                                                  max_depth=1,
                                                                                  max_leaves=0,
                                                                                  min_child_weight=1,
                                                                                  missing=nan,
                                                                                  monotone_constraints='()',
                                                                                  n_estimators=100,
                                                                                  n_jobs=1,
                                                                                  num_parallel_tree=1,
                                                                                  objective='binary:logistic',
                                                                                  predictor='auto',
                                                                                  random_state=123,
                                                                                  reg_alpha=0.0005, ...))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid')
2023-11-10 05:59:21,395:INFO:calibrate_model() succesfully completed......................................
2023-11-10 06:09:19,515:INFO:Initializing finalize_model()
2023-11-10 06:09:19,516:INFO:finalize_model(estimator=CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.1,
                                                                                               loss='deviance',
                                                                                               max_depth=3,
                                                                                               max_features=None,
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.0,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=1,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_leaf=0....
                                                                                               tol=0.0001,
                                                                                               validation_fraction=0.1,
                                                                                               verbose=0,
                                                                                               warm_start=False)),
                                                                   ('catboost',
                                                                    <catboost.core.CatBoostClassifier object at 0x7f7b0a56ea90>),
                                                                   ('ada',
                                                                    AdaBoostClassifier(algorithm='SAMME.R',
                                                                                       base_estimator=None,
                                                                                       learning_rate=1.0,
                                                                                       n_estimators=50,
                                                                                       random_state=123))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid'), fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2023-11-10 06:09:19,532:INFO:Finalizing CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.1,
                                                                                               loss='deviance',
                                                                                               max_depth=3,
                                                                                               max_features=None,
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.0,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=1,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_leaf=0....
                                                                                               tol=0.0001,
                                                                                               validation_fraction=0.1,
                                                                                               verbose=0,
                                                                                               warm_start=False)),
                                                                   ('catboost',
                                                                    <catboost.core.CatBoostClassifier object at 0x7f7b0a56ea90>),
                                                                   ('ada',
                                                                    AdaBoostClassifier(algorithm='SAMME.R',
                                                                                       base_estimator=None,
                                                                                       learning_rate=1.0,
                                                                                       n_estimators=50,
                                                                                       random_state=123))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid')
2023-11-10 06:09:19,542:INFO:Initializing create_model()
2023-11-10 06:09:19,543:INFO:create_model(estimator=CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.1,
                                                                                               loss='deviance',
                                                                                               max_depth=3,
                                                                                               max_features=None,
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.0,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=1,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_leaf=0....
                                                                                               tol=0.0001,
                                                                                               validation_fraction=0.1,
                                                                                               verbose=0,
                                                                                               warm_start=False)),
                                                                   ('catboost',
                                                                    <catboost.core.CatBoostClassifier object at 0x7f7b0a56ea90>),
                                                                   ('ada',
                                                                    AdaBoostClassifier(algorithm='SAMME.R',
                                                                                       base_estimator=None,
                                                                                       learning_rate=1.0,
                                                                                       n_estimators=50,
                                                                                       random_state=123))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-11-10 06:09:19,543:INFO:Checking exceptions
2023-11-10 06:09:19,546:INFO:Importing libraries
2023-11-10 06:09:19,546:INFO:Copying training dataset
2023-11-10 06:09:19,571:INFO:Defining folds
2023-11-10 06:09:19,571:INFO:Declaring metric variables
2023-11-10 06:09:19,571:INFO:Importing untrained model
2023-11-10 06:09:19,571:INFO:Declaring custom model
2023-11-10 06:09:19,584:INFO:Voting Classifier Imported succesfully
2023-11-10 06:09:19,585:INFO:Starting cross validation
2023-11-10 06:09:19,591:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-10 06:15:56,549:INFO:Calculating mean and std
2023-11-10 06:15:56,553:INFO:Creating metrics dataframe
2023-11-10 06:15:56,561:INFO:Finalizing model
2023-11-10 06:17:24,646:INFO:create_model_container: 24
2023-11-10 06:17:24,648:INFO:master_model_container: 24
2023-11-10 06:17:24,648:INFO:display_container: 13
2023-11-10 06:17:24,659:INFO:CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.1,
                                                                                               loss='deviance',
                                                                                               max_depth=3,
                                                                                               max_features=None,
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.0,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=1,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_leaf=0....
                                                                                               tol=0.0001,
                                                                                               validation_fraction=0.1,
                                                                                               verbose=0,
                                                                                               warm_start=False)),
                                                                   ('catboost',
                                                                    <catboost.core.CatBoostClassifier object at 0x7f7b0af1eeb8>),
                                                                   ('ada',
                                                                    AdaBoostClassifier(algorithm='SAMME.R',
                                                                                       base_estimator=None,
                                                                                       learning_rate=1.0,
                                                                                       n_estimators=50,
                                                                                       random_state=123))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid')
2023-11-10 06:17:24,659:INFO:create_model() succesfully completed......................................
2023-11-10 06:17:25,516:INFO:Creating Dashboard logs
2023-11-10 06:17:25,517:INFO:Model: Voting Classifier
2023-11-10 06:17:25,547:INFO:logged params: {'base_estimator__flatten_transform': True, 'base_estimator__n_jobs': 1, 'base_estimator__verbose': False, 'base_estimator__voting': 'soft', 'base_estimator__weights': None, 'base_estimator__catboost': <catboost.core.CatBoostClassifier object at 0x7f7b0af1eeb8>, 'base_estimator__ada': AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), 'base_estimator__gbc__ccp_alpha': 0.0, 'base_estimator__gbc__criterion': 'friedman_mse', 'base_estimator__gbc__init': None, 'base_estimator__gbc__learning_rate': 0.1, 'base_estimator__gbc__loss': 'deviance', 'base_estimator__gbc__max_depth': 3, 'base_estimator__gbc__max_features': None, 'base_estimator__gbc__max_leaf_nodes': None, 'base_estimator__gbc__min_impurity_decrease': 0.0, 'base_estimator__gbc__min_impurity_split': None, 'base_estimator__gbc__min_samples_leaf': 1, 'base_estimator__gbc__min_samples_split': 2, 'base_estimator__gbc__min_weight_fraction_leaf': 0.0, 'base_estimator__gbc__n_estimators': 100, 'base_estimator__gbc__n_iter_no_change': None, 'base_estimator__gbc__presort': 'deprecated', 'base_estimator__gbc__random_state': 123, 'base_estimator__gbc__subsample': 1.0, 'base_estimator__gbc__tol': 0.0001, 'base_estimator__gbc__validation_fraction': 0.1, 'base_estimator__gbc__verbose': 0, 'base_estimator__gbc__warm_start': False, 'base_estimator__catboost__border_count': 254, 'base_estimator__catboost__thread_count': 1, 'base_estimator__catboost__verbose': False, 'base_estimator__catboost__task_type': 'CPU', 'base_estimator__catboost__random_state': 123, 'base_estimator__ada__algorithm': 'SAMME.R', 'base_estimator__ada__base_estimator': None, 'base_estimator__ada__learning_rate': 1.0, 'base_estimator__ada__n_estimators': 50, 'base_estimator__ada__random_state': 123, 'cv': 5, 'method': 'sigmoid'}
2023-11-10 06:17:25,622:INFO:Initializing predict_model()
2023-11-10 06:17:25,622:INFO:predict_model(estimator=CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.1,
                                                                                               loss='deviance',
                                                                                               max_depth=3,
                                                                                               max_features=None,
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.0,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=1,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_leaf=0....
                                                                                               tol=0.0001,
                                                                                               validation_fraction=0.1,
                                                                                               verbose=0,
                                                                                               warm_start=False)),
                                                                   ('catboost',
                                                                    <catboost.core.CatBoostClassifier object at 0x7f7b0af1eeb8>),
                                                                   ('ada',
                                                                    AdaBoostClassifier(algorithm='SAMME.R',
                                                                                       base_estimator=None,
                                                                                       learning_rate=1.0,
                                                                                       n_estimators=50,
                                                                                       random_state=123))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid'), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-10 06:17:25,623:INFO:Checking exceptions
2023-11-10 06:17:25,623:INFO:Preloading libraries
2023-11-10 06:17:28,172:INFO:create_model_container: 24
2023-11-10 06:17:28,172:INFO:master_model_container: 24
2023-11-10 06:17:28,172:INFO:display_container: 12
2023-11-10 06:17:28,179:INFO:CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.1,
                                                                                               loss='deviance',
                                                                                               max_depth=3,
                                                                                               max_features=None,
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.0,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=1,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_leaf=0....
                                                                                               tol=0.0001,
                                                                                               validation_fraction=0.1,
                                                                                               verbose=0,
                                                                                               warm_start=False)),
                                                                   ('catboost',
                                                                    <catboost.core.CatBoostClassifier object at 0x7f7b0af1eeb8>),
                                                                   ('ada',
                                                                    AdaBoostClassifier(algorithm='SAMME.R',
                                                                                       base_estimator=None,
                                                                                       learning_rate=1.0,
                                                                                       n_estimators=50,
                                                                                       random_state=123))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid')
2023-11-10 06:17:28,180:INFO:finalize_model() succesfully completed......................................
2023-11-10 06:19:10,123:INFO:Initializing finalize_model()
2023-11-10 06:19:10,124:INFO:finalize_model(estimator=CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.01,
                                                                                               loss='deviance',
                                                                                               max_depth=7,
                                                                                               max_features='sqrt',
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.05,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=2,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_lea...
                                                                                  max_bin=256,
                                                                                  max_cat_to_onehot=4,
                                                                                  max_delta_step=0,
                                                                                  max_depth=1,
                                                                                  max_leaves=0,
                                                                                  min_child_weight=1,
                                                                                  missing=nan,
                                                                                  monotone_constraints='()',
                                                                                  n_estimators=100,
                                                                                  n_jobs=1,
                                                                                  num_parallel_tree=1,
                                                                                  objective='binary:logistic',
                                                                                  predictor='auto',
                                                                                  random_state=123,
                                                                                  reg_alpha=0.0005, ...))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid'), fit_kwargs=None, groups=None, model_only=True, display=None, experiment_custom_tags=None, return_train_score=False)
2023-11-10 06:19:10,162:INFO:Finalizing CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.01,
                                                                                               loss='deviance',
                                                                                               max_depth=7,
                                                                                               max_features='sqrt',
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.05,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=2,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_lea...
                                                                                  max_bin=256,
                                                                                  max_cat_to_onehot=4,
                                                                                  max_delta_step=0,
                                                                                  max_depth=1,
                                                                                  max_leaves=0,
                                                                                  min_child_weight=1,
                                                                                  missing=nan,
                                                                                  monotone_constraints='()',
                                                                                  n_estimators=100,
                                                                                  n_jobs=1,
                                                                                  num_parallel_tree=1,
                                                                                  objective='binary:logistic',
                                                                                  predictor='auto',
                                                                                  random_state=123,
                                                                                  reg_alpha=0.0005, ...))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid')
2023-11-10 06:19:10,192:INFO:Initializing create_model()
2023-11-10 06:19:10,192:INFO:create_model(estimator=CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.01,
                                                                                               loss='deviance',
                                                                                               max_depth=7,
                                                                                               max_features='sqrt',
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.05,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=2,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_lea...
                                                                                  max_bin=256,
                                                                                  max_cat_to_onehot=4,
                                                                                  max_delta_step=0,
                                                                                  max_depth=1,
                                                                                  max_leaves=0,
                                                                                  min_child_weight=1,
                                                                                  missing=nan,
                                                                                  monotone_constraints='()',
                                                                                  n_estimators=100,
                                                                                  n_jobs=1,
                                                                                  num_parallel_tree=1,
                                                                                  objective='binary:logistic',
                                                                                  predictor='auto',
                                                                                  random_state=123,
                                                                                  reg_alpha=0.0005, ...))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, experiment_custom_tags=None, add_to_model_list=False, probability_threshold=None, display=None, return_train_score=False, kwargs={})
2023-11-10 06:19:10,192:INFO:Checking exceptions
2023-11-10 06:19:10,193:INFO:Importing libraries
2023-11-10 06:19:10,193:INFO:Copying training dataset
2023-11-10 06:19:10,207:INFO:Defining folds
2023-11-10 06:19:10,208:INFO:Declaring metric variables
2023-11-10 06:19:10,208:INFO:Importing untrained model
2023-11-10 06:19:10,208:INFO:Declaring custom model
2023-11-10 06:19:10,211:INFO:Voting Classifier Imported succesfully
2023-11-10 06:19:10,211:INFO:Starting cross validation
2023-11-10 06:19:10,212:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=1
2023-11-10 06:20:19,654:INFO:Calculating mean and std
2023-11-10 06:20:19,656:INFO:Creating metrics dataframe
2023-11-10 06:20:19,660:INFO:Finalizing model
2023-11-10 06:20:38,741:INFO:create_model_container: 24
2023-11-10 06:20:38,745:INFO:master_model_container: 24
2023-11-10 06:20:38,758:INFO:display_container: 13
2023-11-10 06:20:38,790:INFO:CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.01,
                                                                                               loss='deviance',
                                                                                               max_depth=7,
                                                                                               max_features='sqrt',
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.05,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=2,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_lea...
                                                                                  max_bin=256,
                                                                                  max_cat_to_onehot=4,
                                                                                  max_delta_step=0,
                                                                                  max_depth=1,
                                                                                  max_leaves=0,
                                                                                  min_child_weight=1,
                                                                                  missing=nan,
                                                                                  monotone_constraints='()',
                                                                                  n_estimators=100,
                                                                                  n_jobs=1,
                                                                                  num_parallel_tree=1,
                                                                                  objective='binary:logistic',
                                                                                  predictor='auto',
                                                                                  random_state=123,
                                                                                  reg_alpha=0.0005, ...))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid')
2023-11-10 06:20:38,790:INFO:create_model() succesfully completed......................................
2023-11-10 06:20:39,006:INFO:Creating Dashboard logs
2023-11-10 06:20:39,008:INFO:Model: Voting Classifier
2023-11-10 06:20:39,090:INFO:logged params: {'base_estimator__flatten_transform': True, 'base_estimator__n_jobs': 1, 'base_estimator__verbose': False, 'base_estimator__voting': 'soft', 'base_estimator__weights': None, 'base_estimator__gbc__ccp_alpha': 0.0, 'base_estimator__gbc__criterion': 'friedman_mse', 'base_estimator__gbc__init': None, 'base_estimator__gbc__learning_rate': 0.01, 'base_estimator__gbc__loss': 'deviance', 'base_estimator__gbc__max_depth': 7, 'base_estimator__gbc__max_features': 'sqrt', 'base_estimator__gbc__max_leaf_nodes': None, 'base_estimator__gbc__min_impurity_decrease': 0.05, 'base_estimator__gbc__min_impurity_split': None, 'base_estimator__gbc__min_samples_leaf': 2, 'base_estimator__gbc__min_samples_split': 2, 'base_estimator__gbc__min_weight_fraction_leaf': 0.0, 'base_estimator__gbc__n_estimators': 140, 'base_estimator__gbc__n_iter_no_change': None, 'base_estimator__gbc__presort': 'deprecated', 'base_estimator__gbc__random_state': 123, 'base_estimator__gbc__subsample': 0.35, 'base_estimator__gbc__tol': 0.0001, 'base_estimator__gbc__validation_fraction': 0.1, 'base_estimator__gbc__verbose': 0, 'base_estimator__gbc__warm_start': False, 'base_estimator__xgboost__objective': 'binary:logistic', 'base_estimator__xgboost__use_label_encoder': False, 'base_estimator__xgboost__base_score': 0.5, 'base_estimator__xgboost__booster': 'gbtree', 'base_estimator__xgboost__callbacks': None, 'base_estimator__xgboost__colsample_bylevel': 1, 'base_estimator__xgboost__colsample_bynode': 1, 'base_estimator__xgboost__colsample_bytree': 1, 'base_estimator__xgboost__early_stopping_rounds': None, 'base_estimator__xgboost__enable_categorical': False, 'base_estimator__xgboost__eval_metric': None, 'base_estimator__xgboost__gamma': 0, 'base_estimator__xgboost__gpu_id': -1, 'base_estimator__xgboost__grow_policy': 'depthwise', 'base_estimator__xgboost__importance_type': None, 'base_estimator__xgboost__interaction_constraints': '', 'base_estimator__xgboost__learning_rate': 0.5, 'base_estimator__xgboost__max_bin': 256, 'base_estimator__xgboost__max_cat_to_onehot': 4, 'base_estimator__xgboost__max_delta_step': 0, 'base_estimator__xgboost__max_depth': 1, 'base_estimator__xgboost__max_leaves': 0, 'base_estimator__xgboost__min_child_weight': 1, 'base_estimator__xgboost__missing': nan, 'base_estimator__xgboost__monotone_constraints': '()', 'base_estimator__xgboost__n_estimators': 100, 'base_estimator__xgboost__n_jobs': 1, 'base_estimator__xgboost__num_parallel_tree': 1, 'base_estimator__xgboost__predictor': 'auto', 'base_estimator__xgboost__random_state': 123, 'base_estimator__xgboost__reg_alpha': 0.0005, 'base_estimator__xgboost__reg_lambda': 0.5, 'base_estimator__xgboost__sampling_method': 'uniform', 'base_estimator__xgboost__scale_pos_weight': 35.1, 'base_estimator__xgboost__subsample': 1, 'base_estimator__xgboost__tree_method': 'auto', 'base_estimator__xgboost__validate_parameters': 1, 'base_estimator__xgboost__verbosity': 0, 'cv': 5, 'method': 'sigmoid'}
2023-11-10 06:20:39,862:INFO:Initializing predict_model()
2023-11-10 06:20:39,878:INFO:predict_model(estimator=CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.01,
                                                                                               loss='deviance',
                                                                                               max_depth=7,
                                                                                               max_features='sqrt',
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.05,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=2,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_lea...
                                                                                  max_bin=256,
                                                                                  max_cat_to_onehot=4,
                                                                                  max_delta_step=0,
                                                                                  max_depth=1,
                                                                                  max_leaves=0,
                                                                                  min_child_weight=1,
                                                                                  missing=nan,
                                                                                  monotone_constraints='()',
                                                                                  n_estimators=100,
                                                                                  n_jobs=1,
                                                                                  num_parallel_tree=1,
                                                                                  objective='binary:logistic',
                                                                                  predictor='auto',
                                                                                  random_state=123,
                                                                                  reg_alpha=0.0005, ...))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid'), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=False, ml_usecase=None, display=None, drift_kwargs=None)
2023-11-10 06:20:39,879:INFO:Checking exceptions
2023-11-10 06:20:39,880:INFO:Preloading libraries
2023-11-10 06:20:42,399:INFO:create_model_container: 24
2023-11-10 06:20:42,399:INFO:master_model_container: 24
2023-11-10 06:20:42,399:INFO:display_container: 12
2023-11-10 06:20:42,429:INFO:CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.01,
                                                                                               loss='deviance',
                                                                                               max_depth=7,
                                                                                               max_features='sqrt',
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.05,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=2,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_lea...
                                                                                  max_bin=256,
                                                                                  max_cat_to_onehot=4,
                                                                                  max_delta_step=0,
                                                                                  max_depth=1,
                                                                                  max_leaves=0,
                                                                                  min_child_weight=1,
                                                                                  missing=nan,
                                                                                  monotone_constraints='()',
                                                                                  n_estimators=100,
                                                                                  n_jobs=1,
                                                                                  num_parallel_tree=1,
                                                                                  objective='binary:logistic',
                                                                                  predictor='auto',
                                                                                  random_state=123,
                                                                                  reg_alpha=0.0005, ...))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid')
2023-11-10 06:20:42,429:INFO:finalize_model() succesfully completed......................................
2023-11-10 06:24:16,704:INFO:Initializing predict_model()
2023-11-10 06:24:16,706:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-10 06:24:16,706:INFO:Checking exceptions
2023-11-10 06:24:16,707:INFO:Preloading libraries
2023-11-10 06:24:16,707:INFO:Preparing display monitor
2023-11-10 06:32:34,014:INFO:Initializing predict_model()
2023-11-10 06:32:34,016:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-10 06:32:34,016:INFO:Checking exceptions
2023-11-10 06:32:34,016:INFO:Preloading libraries
2023-11-10 06:32:34,017:INFO:Preparing display monitor
2023-11-10 06:32:58,366:INFO:Initializing predict_model()
2023-11-10 06:32:58,368:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-10 06:32:58,368:INFO:Checking exceptions
2023-11-10 06:32:58,369:INFO:Preloading libraries
2023-11-10 06:32:58,369:INFO:Preparing display monitor
2023-11-10 06:33:11,470:INFO:Initializing predict_model()
2023-11-10 06:33:11,472:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-10 06:33:11,472:INFO:Checking exceptions
2023-11-10 06:33:11,472:INFO:Preloading libraries
2023-11-10 06:33:11,473:INFO:Preparing display monitor
2023-11-10 06:33:18,755:INFO:Initializing predict_model()
2023-11-10 06:33:18,755:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-10 06:33:18,756:INFO:Checking exceptions
2023-11-10 06:33:18,756:INFO:Preloading libraries
2023-11-10 06:33:18,756:INFO:Preparing display monitor
2023-11-10 06:33:26,521:INFO:Initializing predict_model()
2023-11-10 06:33:26,521:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-10 06:33:26,521:INFO:Checking exceptions
2023-11-10 06:33:26,522:INFO:Preloading libraries
2023-11-10 06:33:26,522:INFO:Preparing display monitor
2023-11-10 06:33:55,159:INFO:Initializing predict_model()
2023-11-10 06:33:55,160:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-10 06:33:55,161:INFO:Checking exceptions
2023-11-10 06:33:55,161:INFO:Preloading libraries
2023-11-10 06:33:55,162:INFO:Preparing display monitor
2023-11-10 06:35:34,074:INFO:Initializing predict_model()
2023-11-10 06:35:34,074:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-10 06:35:34,075:INFO:Checking exceptions
2023-11-10 06:35:34,075:INFO:Preloading libraries
2023-11-10 06:35:34,075:INFO:Preparing display monitor
2023-11-10 06:35:42,922:INFO:Initializing predict_model()
2023-11-10 06:35:42,922:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-10 06:35:42,923:INFO:Checking exceptions
2023-11-10 06:35:42,924:INFO:Preloading libraries
2023-11-10 06:35:42,924:INFO:Preparing display monitor
2023-11-10 06:37:31,511:INFO:Initializing predict_model()
2023-11-10 06:37:31,512:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-10 06:37:31,512:INFO:Checking exceptions
2023-11-10 06:37:31,513:INFO:Preloading libraries
2023-11-10 06:37:31,513:INFO:Preparing display monitor
2023-11-10 06:39:25,546:INFO:Initializing predict_model()
2023-11-10 06:39:25,548:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-10 06:39:25,549:INFO:Checking exceptions
2023-11-10 06:39:25,551:INFO:Preloading libraries
2023-11-10 06:39:25,551:INFO:Preparing display monitor
2023-11-10 06:40:11,433:INFO:Initializing predict_model()
2023-11-10 06:40:11,434:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-10 06:40:11,434:INFO:Checking exceptions
2023-11-10 06:40:11,435:INFO:Preloading libraries
2023-11-10 06:40:11,435:INFO:Preparing display monitor
2023-11-10 06:41:10,766:INFO:Initializing predict_model()
2023-11-10 06:41:10,768:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-10 06:41:10,768:INFO:Checking exceptions
2023-11-10 06:41:10,768:INFO:Preloading libraries
2023-11-10 06:41:10,769:INFO:Preparing display monitor
2023-11-10 06:41:23,699:INFO:Initializing interpret_model()
2023-11-10 06:41:23,699:INFO:interpret_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, use_train_data=False, X_new_sample=    mailchimp_id user_full_name            user_email  member_rating  \
85           159     Dewey Roob  dewey.roob@gmail.com              3   

   optin_time country_code  tag_count  made_purchase  optin_days  \
85 2020-05-20           UK         26              1        -225   

   email_provider  ...  tag_learning_lab_43  tag_learning_lab_44  \
85      gmail.com  ...                  0.0                  0.0   

    tag_learning_lab_45  tag_learning_lab_46  tag_learning_lab_47  \
85                  0.0                  1.0                  1.0   

    tag_time_series_webinar  tag_webinar  tag_webinar_01  \
85                      1.0          1.0             0.0   

    tag_webinar_no_degree  tag_webinar_no_degree_02  
85                    0.0                       0.0  

[1 rows x 57 columns], y_new_sample=None, feature=None, kwargs={}, observation=None, plot=reason, save=False)
2023-11-10 06:41:23,699:INFO:Checking exceptions
2023-11-10 06:41:23,861:INFO:plot type: reason
2023-11-10 06:41:23,861:INFO:model type detected: type 2
2023-11-10 06:41:23,861:INFO:Creating TreeExplainer
2023-11-10 06:41:24,245:INFO:Compiling shap values
2023-11-10 06:41:24,292:WARNING:Observation set to None. Model agnostic plot will be rendered.
2023-11-10 06:41:24,299:INFO:Visual Rendered Successfully
2023-11-10 06:41:24,301:INFO:interpret_model() succesfully completed......................................
2023-11-10 06:41:57,450:INFO:Initializing predict_model()
2023-11-10 06:41:57,451:INFO:predict_model(estimator=<catboost.core.CatBoostClassifier object at 0x7f7b099ab6a0>, probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-10 06:41:57,452:INFO:Checking exceptions
2023-11-10 06:41:57,452:INFO:Preloading libraries
2023-11-10 06:41:57,454:INFO:Preparing display monitor
2023-11-10 06:59:57,228:INFO:Initializing save_model()
2023-11-10 06:59:57,229:INFO:save_model(model=CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.1,
                                                                                               loss='deviance',
                                                                                               max_depth=3,
                                                                                               max_features=None,
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.0,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=1,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_leaf=0....
                                                                                               tol=0.0001,
                                                                                               validation_fraction=0.1,
                                                                                               verbose=0,
                                                                                               warm_start=False)),
                                                                   ('catboost',
                                                                    <catboost.core.CatBoostClassifier object at 0x7f7b0af1eeb8>),
                                                                   ('ada',
                                                                    AdaBoostClassifier(algorithm='SAMME.R',
                                                                                       base_estimator=None,
                                                                                       learning_rate=1.0,
                                                                                       n_estimators=50,
                                                                                       random_state=123))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid'), model_name=models/pycaret/blended_models_calibrated_finalized, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2023-11-10 06:59:57,229:INFO:Adding model into prep_pipe
2023-11-10 06:59:57,559:INFO:models/pycaret/blended_models_calibrated_finalized.pkl saved in current working directory
2023-11-10 06:59:57,635:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                                                                                                                validation_fraction=0.1,
                                                                                                                verbose=0,
                                                                                                                warm_start=False)),
                                                                                    ('catboost',
                                                                                     <catboost.core.CatBoostClassifier object at 0x7f7b0af1eeb8>),
                                                                                    ('ada',
                                                                                     AdaBoostClassifier(algorithm='SAMME.R',
                                                                                                        base_estimator=None,
                                                                                                        learning_rate=1.0,
                                                                                                        n_estimators=50,
                                                                                                        random_state=123))],
                                                                        flatten_transform=True,
                                                                        n_jobs=1,
                                                                        verbose=False,
                                                                        voting='soft',
                                                                        weights=None),
                                        cv=5, method='sigmoid')]],
         verbose=False)
2023-11-10 06:59:57,635:INFO:save_model() successfully completed......................................
2023-11-10 07:00:04,260:INFO:Initializing save_model()
2023-11-10 07:00:04,261:INFO:save_model(model=CalibratedClassifierCV(base_estimator=VotingClassifier(estimators=[('gbc',
                                                                    GradientBoostingClassifier(ccp_alpha=0.0,
                                                                                               criterion='friedman_mse',
                                                                                               init=None,
                                                                                               learning_rate=0.01,
                                                                                               loss='deviance',
                                                                                               max_depth=7,
                                                                                               max_features='sqrt',
                                                                                               max_leaf_nodes=None,
                                                                                               min_impurity_decrease=0.05,
                                                                                               min_impurity_split=None,
                                                                                               min_samples_leaf=2,
                                                                                               min_samples_split=2,
                                                                                               min_weight_fraction_lea...
                                                                                  max_bin=256,
                                                                                  max_cat_to_onehot=4,
                                                                                  max_delta_step=0,
                                                                                  max_depth=1,
                                                                                  max_leaves=0,
                                                                                  min_child_weight=1,
                                                                                  missing=nan,
                                                                                  monotone_constraints='()',
                                                                                  n_estimators=100,
                                                                                  n_jobs=1,
                                                                                  num_parallel_tree=1,
                                                                                  objective='binary:logistic',
                                                                                  predictor='auto',
                                                                                  random_state=123,
                                                                                  reg_alpha=0.0005, ...))],
                                                       flatten_transform=True,
                                                       n_jobs=1, verbose=False,
                                                       voting='soft',
                                                       weights=None),
                       cv=5, method='sigmoid'), model_name=models/pycaret/blended_tuned_models_calibrated_finalized, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='made_purchase')),
                ('fix_perfect', Remove_100(target='made_purchase')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), verbose=True, kwargs={})
2023-11-10 07:00:04,261:INFO:Adding model into prep_pipe
2023-11-10 07:00:04,382:INFO:models/pycaret/blended_tuned_models_calibrated_finalized.pkl saved in current working directory
2023-11-10 07:00:04,430:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      display_types=True, features_todrop=[],
                                      id_columns=[],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning...
                                                                                                   max_cat_to_onehot=4,
                                                                                                   max_delta_step=0,
                                                                                                   max_depth=1,
                                                                                                   max_leaves=0,
                                                                                                   min_child_weight=1,
                                                                                                   missing=nan,
                                                                                                   monotone_constraints='()',
                                                                                                   n_estimators=100,
                                                                                                   n_jobs=1,
                                                                                                   num_parallel_tree=1,
                                                                                                   objective='binary:logistic',
                                                                                                   predictor='auto',
                                                                                                   random_state=123,
                                                                                                   reg_alpha=0.0005, ...))],
                                                                        flatten_transform=True,
                                                                        n_jobs=1,
                                                                        verbose=False,
                                                                        voting='soft',
                                                                        weights=None),
                                        cv=5, method='sigmoid')]],
         verbose=False)
2023-11-10 07:00:04,430:INFO:save_model() successfully completed......................................
2023-11-11 07:52:57,584:INFO:Initializing load_model()
2023-11-11 07:52:57,585:INFO:load_model(model_name=models/xgb_model_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-11 07:54:55,516:INFO:Initializing load_model()
2023-11-11 07:54:55,530:INFO:load_model(model_name=/models/pycaret/blended_tuned_models_calibrated_finalized.pkl, platform=None, authentication=None, verbose=True)
2023-11-11 07:55:04,370:INFO:Initializing load_model()
2023-11-11 07:55:04,370:INFO:load_model(model_name=models/pycaret/blended_tuned_models_calibrated_finalized.pkl, platform=None, authentication=None, verbose=True)
2023-11-11 07:57:01,384:INFO:Initializing load_model()
2023-11-11 07:57:01,386:INFO:load_model(model_name=models/pycaret/blended_tuned_models_calibrated_finalized.pkl, platform=None, authentication=None, verbose=True)
2023-11-11 07:57:42,402:INFO:Initializing load_model()
2023-11-11 07:57:42,403:INFO:load_model(model_name=models/pycaret/blended_tuned_models_calibrated_finalized, platform=None, authentication=None, verbose=True)
2023-11-11 07:57:43,511:INFO:Initializing predict_model()
2023-11-11 07:57:43,511:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                                                                                                   grow_policy='depthwise',
                                                                                                   importance_type=None,
                                                                                                   interaction_constraints='',
                                                                                                   learning_rate=0.5,
                                                                                                   max_bin=256,
                                                                                                   max_cat_to_onehot=4,
                                                                                                   max_delta_step=0,
                                                                                                   max_depth=1,
                                                                                                   max_leaves=0,
                                                                                                   min_child_weight=1,
                                                                                                   missing=nan,
                                                                                                   monotone_constraints='()',
                                                                                                   n_estimators=100,
                                                                                                   n_jobs=1,
                                                                                                   num_parallel_tree=1,
                                                                                                   predictor='auto',
                                                                                                   random_state=123,
                                                                                                   reg_alpha=0.0005,
                                                                                                   reg_lambda=0.5, ...))],
                                                                        n_jobs=1,
                                                                        voting='soft'),
                                        cv=5)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-11 07:57:43,512:INFO:Checking exceptions
2023-11-11 07:57:43,512:INFO:Preloading libraries
2023-11-11 08:48:11,008:INFO:Initializing load_model()
2023-11-11 08:48:11,008:INFO:load_model(model_name=models/pycaret/blended_tuned_models_calibrated_finalized, platform=None, authentication=None, verbose=True)
2023-11-11 08:48:11,755:INFO:Initializing predict_model()
2023-11-11 08:48:11,755:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                                                                                                   grow_policy='depthwise',
                                                                                                   importance_type=None,
                                                                                                   interaction_constraints='',
                                                                                                   learning_rate=0.5,
                                                                                                   max_bin=256,
                                                                                                   max_cat_to_onehot=4,
                                                                                                   max_delta_step=0,
                                                                                                   max_depth=1,
                                                                                                   max_leaves=0,
                                                                                                   min_child_weight=1,
                                                                                                   missing=nan,
                                                                                                   monotone_constraints='()',
                                                                                                   n_estimators=100,
                                                                                                   n_jobs=1,
                                                                                                   num_parallel_tree=1,
                                                                                                   predictor='auto',
                                                                                                   random_state=123,
                                                                                                   reg_alpha=0.0005,
                                                                                                   reg_lambda=0.5, ...))],
                                                                        n_jobs=1,
                                                                        voting='soft'),
                                        cv=5)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-11 08:48:11,755:INFO:Checking exceptions
2023-11-11 08:48:11,755:INFO:Preloading libraries
2023-11-11 08:53:25,835:INFO:Initializing load_model()
2023-11-11 08:53:25,836:INFO:load_model(model_name=models/pycaret/blended_tuned_models_calibrated_finalized, platform=None, authentication=None, verbose=True)
2023-11-11 08:53:26,970:INFO:Initializing predict_model()
2023-11-11 08:53:26,970:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                                                                                                   grow_policy='depthwise',
                                                                                                   importance_type=None,
                                                                                                   interaction_constraints='',
                                                                                                   learning_rate=0.5,
                                                                                                   max_bin=256,
                                                                                                   max_cat_to_onehot=4,
                                                                                                   max_delta_step=0,
                                                                                                   max_depth=1,
                                                                                                   max_leaves=0,
                                                                                                   min_child_weight=1,
                                                                                                   missing=nan,
                                                                                                   monotone_constraints='()',
                                                                                                   n_estimators=100,
                                                                                                   n_jobs=1,
                                                                                                   num_parallel_tree=1,
                                                                                                   predictor='auto',
                                                                                                   random_state=123,
                                                                                                   reg_alpha=0.0005,
                                                                                                   reg_lambda=0.5, ...))],
                                                                        n_jobs=1,
                                                                        voting='soft'),
                                        cv=5)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-11 08:53:26,970:INFO:Checking exceptions
2023-11-11 08:53:26,970:INFO:Preloading libraries
2023-11-11 09:07:17,319:INFO:Initializing load_model()
2023-11-11 09:07:17,322:INFO:load_model(model_name=models/pycaret/blended_tuned_models_calibrated_finalized, platform=None, authentication=None, verbose=True)
2023-11-11 09:07:18,842:INFO:Initializing predict_model()
2023-11-11 09:07:18,842:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                                                                                                   grow_policy='depthwise',
                                                                                                   importance_type=None,
                                                                                                   interaction_constraints='',
                                                                                                   learning_rate=0.5,
                                                                                                   max_bin=256,
                                                                                                   max_cat_to_onehot=4,
                                                                                                   max_delta_step=0,
                                                                                                   max_depth=1,
                                                                                                   max_leaves=0,
                                                                                                   min_child_weight=1,
                                                                                                   missing=nan,
                                                                                                   monotone_constraints='()',
                                                                                                   n_estimators=100,
                                                                                                   n_jobs=1,
                                                                                                   num_parallel_tree=1,
                                                                                                   predictor='auto',
                                                                                                   random_state=123,
                                                                                                   reg_alpha=0.0005,
                                                                                                   reg_lambda=0.5, ...))],
                                                                        n_jobs=1,
                                                                        voting='soft'),
                                        cv=5)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-11 09:07:18,842:INFO:Checking exceptions
2023-11-11 09:07:18,842:INFO:Preloading libraries
2023-11-11 09:09:02,154:INFO:Initializing load_model()
2023-11-11 09:09:02,155:INFO:load_model(model_name=models/pycaret/blended_tuned_models_calibrated_finalized, platform=None, authentication=None, verbose=True)
2023-11-11 09:09:03,310:INFO:Initializing predict_model()
2023-11-11 09:09:03,310:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                                                                                                   grow_policy='depthwise',
                                                                                                   importance_type=None,
                                                                                                   interaction_constraints='',
                                                                                                   learning_rate=0.5,
                                                                                                   max_bin=256,
                                                                                                   max_cat_to_onehot=4,
                                                                                                   max_delta_step=0,
                                                                                                   max_depth=1,
                                                                                                   max_leaves=0,
                                                                                                   min_child_weight=1,
                                                                                                   missing=nan,
                                                                                                   monotone_constraints='()',
                                                                                                   n_estimators=100,
                                                                                                   n_jobs=1,
                                                                                                   num_parallel_tree=1,
                                                                                                   predictor='auto',
                                                                                                   random_state=123,
                                                                                                   reg_alpha=0.0005,
                                                                                                   reg_lambda=0.5, ...))],
                                                                        n_jobs=1,
                                                                        voting='soft'),
                                        cv=5)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-11 09:09:03,310:INFO:Checking exceptions
2023-11-11 09:09:03,310:INFO:Preloading libraries
2023-11-13 18:15:48,752:INFO:Initializing load_model()
2023-11-13 18:15:48,781:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-13 18:15:49,249:INFO:Initializing predict_model()
2023-11-13 18:15:49,250:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-13 18:15:49,250:INFO:Checking exceptions
2023-11-13 18:15:49,250:INFO:Preloading libraries
2023-11-14 05:58:34,039:INFO:Initializing load_model()
2023-11-14 05:58:34,046:INFO:load_model(model_name=models/blended_model_final, platform=None, authentication=None, verbose=True)
2023-11-14 06:01:02,244:INFO:Initializing load_model()
2023-11-14 06:01:02,247:INFO:load_model(model_name=models/blended_model_final, platform=None, authentication=None, verbose=True)
2023-11-14 06:03:40,552:INFO:Initializing load_model()
2023-11-14 06:03:40,554:INFO:load_model(model_name=/models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-14 06:04:05,212:INFO:Initializing load_model()
2023-11-14 06:04:05,213:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-14 06:04:05,413:INFO:Initializing predict_model()
2023-11-14 06:04:05,414:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-14 06:04:05,414:INFO:Checking exceptions
2023-11-14 06:04:05,414:INFO:Preloading libraries
2023-11-18 04:47:03,925:INFO:Initializing load_model()
2023-11-18 04:47:03,928:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-18 04:47:05,396:INFO:Initializing predict_model()
2023-11-18 04:47:05,396:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-18 04:47:05,396:INFO:Checking exceptions
2023-11-18 04:47:05,397:INFO:Preloading libraries
2023-11-18 05:10:12,801:INFO:Initializing load_model()
2023-11-18 05:10:12,802:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-18 05:10:13,600:INFO:Initializing predict_model()
2023-11-18 05:10:13,603:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-18 05:10:13,603:INFO:Checking exceptions
2023-11-18 05:10:13,603:INFO:Preloading libraries
2023-11-18 07:39:24,647:INFO:Initializing load_model()
2023-11-18 07:39:24,654:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-18 07:39:24,855:INFO:Initializing predict_model()
2023-11-18 07:39:24,856:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-18 07:39:24,856:INFO:Checking exceptions
2023-11-18 07:39:24,856:INFO:Preloading libraries
2023-11-18 08:00:49,424:INFO:Initializing load_model()
2023-11-18 08:00:49,426:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-18 08:00:50,047:INFO:Initializing predict_model()
2023-11-18 08:00:50,047:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-18 08:00:50,047:INFO:Checking exceptions
2023-11-18 08:00:50,047:INFO:Preloading libraries
2023-11-18 09:19:16,544:INFO:Initializing load_model()
2023-11-18 09:19:16,551:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-18 09:19:16,736:INFO:Initializing predict_model()
2023-11-18 09:19:16,737:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-18 09:19:16,737:INFO:Checking exceptions
2023-11-18 09:19:16,737:INFO:Preloading libraries
2023-11-19 13:11:58,010:INFO:Initializing load_model()
2023-11-19 13:11:58,012:INFO:load_model(model_name=/models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-19 13:13:17,244:INFO:Initializing load_model()
2023-11-19 13:13:17,246:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized.pkl, platform=None, authentication=None, verbose=True)
2023-11-19 13:13:27,627:INFO:Initializing load_model()
2023-11-19 13:13:27,628:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-19 13:13:27,978:INFO:Initializing predict_model()
2023-11-19 13:13:27,978:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-19 13:13:27,978:INFO:Checking exceptions
2023-11-19 13:13:27,978:INFO:Preloading libraries
2023-11-19 13:20:21,781:INFO:Initializing load_model()
2023-11-19 13:20:21,782:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-19 13:20:22,209:INFO:Initializing predict_model()
2023-11-19 13:20:22,209:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-19 13:20:22,209:INFO:Checking exceptions
2023-11-19 13:20:22,209:INFO:Preloading libraries
2023-11-19 13:22:35,848:INFO:Initializing load_model()
2023-11-19 13:22:35,848:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-19 13:22:36,155:INFO:Initializing predict_model()
2023-11-19 13:22:36,155:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-19 13:22:36,155:INFO:Checking exceptions
2023-11-19 13:22:36,155:INFO:Preloading libraries
2023-11-19 13:23:56,251:INFO:Initializing load_model()
2023-11-19 13:23:56,251:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-19 13:23:56,565:INFO:Initializing predict_model()
2023-11-19 13:23:56,566:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-19 13:23:56,566:INFO:Checking exceptions
2023-11-19 13:23:56,566:INFO:Preloading libraries
2023-11-19 15:06:03,704:INFO:Initializing load_model()
2023-11-19 15:06:03,712:INFO:load_model(model_name=/models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-19 15:06:24,496:INFO:Initializing load_model()
2023-11-19 15:06:24,497:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-19 15:06:24,790:INFO:Initializing predict_model()
2023-11-19 15:06:24,791:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-19 15:06:24,791:INFO:Checking exceptions
2023-11-19 15:06:24,791:INFO:Preloading libraries
2023-11-19 15:07:48,925:INFO:Initializing load_model()
2023-11-19 15:07:48,925:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-19 15:07:49,283:INFO:Initializing predict_model()
2023-11-19 15:07:49,284:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-19 15:07:49,284:INFO:Checking exceptions
2023-11-19 15:07:49,284:INFO:Preloading libraries
2023-11-19 15:09:19,199:INFO:Initializing load_model()
2023-11-19 15:09:19,199:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-19 15:09:19,480:INFO:Initializing predict_model()
2023-11-19 15:09:19,480:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-19 15:09:19,480:INFO:Checking exceptions
2023-11-19 15:09:19,480:INFO:Preloading libraries
2023-11-19 20:34:14,208:INFO:Initializing load_model()
2023-11-19 20:34:14,209:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-19 20:34:14,478:INFO:Initializing predict_model()
2023-11-19 20:34:14,478:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-19 20:34:14,478:INFO:Checking exceptions
2023-11-19 20:34:14,478:INFO:Preloading libraries
2023-11-19 20:35:19,242:INFO:Initializing load_model()
2023-11-19 20:35:19,242:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-19 20:35:19,634:INFO:Initializing predict_model()
2023-11-19 20:35:19,634:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-19 20:35:19,634:INFO:Checking exceptions
2023-11-19 20:35:19,634:INFO:Preloading libraries
2023-11-19 20:41:32,797:INFO:Initializing load_model()
2023-11-19 20:41:32,798:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-19 20:41:33,158:INFO:Initializing predict_model()
2023-11-19 20:41:33,158:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-19 20:41:33,158:INFO:Checking exceptions
2023-11-19 20:41:33,158:INFO:Preloading libraries
2023-11-23 10:39:03,941:INFO:Initializing load_model()
2023-11-23 10:39:03,941:INFO:load_model(model_name=models/xgb_model_tuned, platform=None, authentication=None, verbose=True)
2023-11-23 10:43:09,313:INFO:Initializing load_model()
2023-11-23 10:43:09,314:INFO:load_model(model_name=models/xgb_model_tuned, platform=None, authentication=None, verbose=True)
2023-11-23 11:08:41,029:INFO:Initializing load_model()
2023-11-23 11:08:41,029:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 11:08:41,512:INFO:Initializing predict_model()
2023-11-23 11:08:41,512:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 11:08:41,512:INFO:Checking exceptions
2023-11-23 11:08:41,512:INFO:Preloading libraries
2023-11-23 11:12:35,866:INFO:Initializing load_model()
2023-11-23 11:12:35,867:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 11:12:36,199:INFO:Initializing predict_model()
2023-11-23 11:12:36,199:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 11:12:36,199:INFO:Checking exceptions
2023-11-23 11:12:36,199:INFO:Preloading libraries
2023-11-23 11:19:58,468:INFO:Initializing load_model()
2023-11-23 11:19:58,468:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 11:19:58,864:INFO:Initializing predict_model()
2023-11-23 11:19:58,865:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 11:19:58,865:INFO:Checking exceptions
2023-11-23 11:19:58,866:INFO:Preloading libraries
2023-11-23 11:24:26,958:INFO:Initializing load_model()
2023-11-23 11:24:26,962:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 11:24:27,422:INFO:Initializing predict_model()
2023-11-23 11:24:27,424:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 11:24:27,428:INFO:Checking exceptions
2023-11-23 11:24:27,434:INFO:Preloading libraries
2023-11-23 11:24:37,626:INFO:Initializing load_model()
2023-11-23 11:24:37,635:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 11:24:37,799:INFO:Initializing predict_model()
2023-11-23 11:24:37,800:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 11:24:37,820:INFO:Checking exceptions
2023-11-23 11:24:37,854:INFO:Preloading libraries
2023-11-23 11:26:40,510:INFO:Initializing load_model()
2023-11-23 11:26:40,511:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 11:26:40,748:INFO:Initializing predict_model()
2023-11-23 11:26:40,748:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 11:26:40,748:INFO:Checking exceptions
2023-11-23 11:26:40,749:INFO:Preloading libraries
2023-11-23 11:38:36,063:INFO:Initializing load_model()
2023-11-23 11:38:36,064:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 11:38:36,399:INFO:Initializing predict_model()
2023-11-23 11:38:36,399:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 11:38:36,400:INFO:Checking exceptions
2023-11-23 11:38:36,400:INFO:Preloading libraries
2023-11-23 11:40:08,327:INFO:Initializing load_model()
2023-11-23 11:40:08,327:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 11:40:08,806:INFO:Initializing predict_model()
2023-11-23 11:40:08,806:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 11:40:08,806:INFO:Checking exceptions
2023-11-23 11:40:08,806:INFO:Preloading libraries
2023-11-23 11:41:13,682:INFO:Initializing load_model()
2023-11-23 11:41:13,683:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 11:41:14,199:INFO:Initializing predict_model()
2023-11-23 11:41:14,199:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 11:41:14,200:INFO:Checking exceptions
2023-11-23 11:41:14,200:INFO:Preloading libraries
2023-11-23 11:44:20,162:INFO:Initializing load_model()
2023-11-23 11:44:20,163:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 11:44:20,637:INFO:Initializing predict_model()
2023-11-23 11:44:20,637:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 11:44:20,638:INFO:Checking exceptions
2023-11-23 11:44:20,638:INFO:Preloading libraries
2023-11-23 11:48:36,657:INFO:Initializing load_model()
2023-11-23 11:48:36,658:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 11:48:37,057:INFO:Initializing predict_model()
2023-11-23 11:48:37,057:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 11:48:37,057:INFO:Checking exceptions
2023-11-23 11:48:37,058:INFO:Preloading libraries
2023-11-23 11:51:06,507:INFO:Initializing load_model()
2023-11-23 11:51:06,508:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 11:51:06,867:INFO:Initializing predict_model()
2023-11-23 11:51:06,867:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 11:51:06,867:INFO:Checking exceptions
2023-11-23 11:51:06,867:INFO:Preloading libraries
2023-11-23 11:55:57,888:INFO:Initializing load_model()
2023-11-23 11:55:57,889:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 11:55:58,364:INFO:Initializing predict_model()
2023-11-23 11:55:58,365:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 11:55:58,366:INFO:Checking exceptions
2023-11-23 11:55:58,366:INFO:Preloading libraries
2023-11-23 11:56:54,376:INFO:Initializing load_model()
2023-11-23 11:56:54,376:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 11:56:55,077:INFO:Initializing predict_model()
2023-11-23 11:56:55,077:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 11:56:55,077:INFO:Checking exceptions
2023-11-23 11:56:55,078:INFO:Preloading libraries
2023-11-23 12:02:18,875:INFO:Initializing load_model()
2023-11-23 12:02:18,876:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 12:02:19,306:INFO:Initializing predict_model()
2023-11-23 12:02:19,307:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 12:02:19,307:INFO:Checking exceptions
2023-11-23 12:02:19,307:INFO:Preloading libraries
2023-11-23 12:07:03,800:INFO:Initializing load_model()
2023-11-23 12:07:03,800:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 12:07:04,505:INFO:Initializing predict_model()
2023-11-23 12:07:04,505:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 12:07:04,505:INFO:Checking exceptions
2023-11-23 12:07:04,505:INFO:Preloading libraries
2023-11-23 12:09:25,164:INFO:Initializing load_model()
2023-11-23 12:09:25,164:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 12:09:25,805:INFO:Initializing predict_model()
2023-11-23 12:09:25,806:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 12:09:25,806:INFO:Checking exceptions
2023-11-23 12:09:25,806:INFO:Preloading libraries
2023-11-23 12:12:48,078:INFO:Initializing load_model()
2023-11-23 12:12:48,079:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 12:12:48,606:INFO:Initializing predict_model()
2023-11-23 12:12:48,607:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 12:12:48,607:INFO:Checking exceptions
2023-11-23 12:12:48,607:INFO:Preloading libraries
2023-11-23 12:13:43,257:INFO:Initializing load_model()
2023-11-23 12:13:43,258:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 12:13:43,405:INFO:Initializing predict_model()
2023-11-23 12:13:43,406:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 12:13:43,406:INFO:Checking exceptions
2023-11-23 12:13:43,406:INFO:Preloading libraries
2023-11-23 12:37:28,849:INFO:Initializing load_model()
2023-11-23 12:37:28,850:INFO:load_model(model_name=models/xgb_model_tuned, platform=None, authentication=None, verbose=True)
2023-11-23 12:43:43,090:INFO:Initializing load_model()
2023-11-23 12:43:43,090:INFO:load_model(model_name=models/xgb_model_tuned, platform=None, authentication=None, verbose=True)
2023-11-23 12:45:17,598:INFO:Initializing load_model()
2023-11-23 12:45:17,599:INFO:load_model(model_name=models/xgb_model_tuned, platform=None, authentication=None, verbose=True)
2023-11-23 12:47:41,579:INFO:Initializing load_model()
2023-11-23 12:47:41,580:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 12:47:42,163:INFO:Initializing predict_model()
2023-11-23 12:47:42,163:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 12:47:42,164:INFO:Checking exceptions
2023-11-23 12:47:42,164:INFO:Preloading libraries
2023-11-23 12:50:11,488:INFO:Initializing load_model()
2023-11-23 12:50:11,488:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-23 12:50:11,825:INFO:Initializing predict_model()
2023-11-23 12:50:11,825:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-23 12:50:11,825:INFO:Checking exceptions
2023-11-23 12:50:11,825:INFO:Preloading libraries
2023-11-24 13:31:48,737:INFO:Initializing load_model()
2023-11-24 13:31:48,740:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-24 13:31:50,951:INFO:Initializing predict_model()
2023-11-24 13:31:50,954:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-24 13:31:50,957:INFO:Checking exceptions
2023-11-24 13:31:50,959:INFO:Preloading libraries
2023-11-24 21:39:47,696:INFO:Initializing load_model()
2023-11-24 21:39:47,696:INFO:load_model(model_name=models/pycaret/xgb_model_single_tuned_finalized, platform=None, authentication=None, verbose=True)
2023-11-24 21:39:48,105:INFO:Initializing predict_model()
2023-11-24 21:39:48,105:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=['country_code'],
                                      ml_usecase='classification',
                                      numerical_features=['tag_count',
                                                          'tag_count_by_optin_day',
                                                          'tag_aws_webinar',
                                                          'tag_learning_lab',
                                                          'tag_learning_lab_05',
                                                          'tag_learning_lab_09',
                                                          'tag_learning_lab_11',
                                                          'tag_learning_lab_12',
                                                          'tag_learning_lab_13',
                                                          'tag_learning_lab_14',
                                                          'tag_learni...
                               gamma=0, gpu_id=-1, grow_policy='depthwise',
                               importance_type=None, interaction_constraints='',
                               learning_rate=0.5, max_bin=256,
                               max_cat_to_onehot=4, max_delta_step=0,
                               max_depth=1, max_leaves=0, min_child_weight=1,
                               missing=nan, monotone_constraints='()',
                               n_estimators=100, n_jobs=1, num_parallel_tree=1,
                               predictor='auto', random_state=123,
                               reg_alpha=0.0005, reg_lambda=0.5, ...)]]), probability_threshold=None, encoded_labels=False, drift_report=False, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.CLASSIFICATION, display=None, drift_kwargs=None)
2023-11-24 21:39:48,106:INFO:Checking exceptions
2023-11-24 21:39:48,106:INFO:Preloading libraries
